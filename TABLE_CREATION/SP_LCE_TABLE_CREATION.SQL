DROP PROCEDURE IF EXISTS SP_LCE_TABLE_CREATION;
CREATE PROCEDURE SP_LCE_TABLE_CREATION(OUT SUCCESS_MESSAGE INTEGER)
BEGIN

-- QUERY FOR ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		SET SUCCESS_MESSAGE =0;
	END;

	SET AUTOCOMMIT = 0;
	START TRANSACTION;
	SET SUCCESS_MESSAGE =0;

	SET FOREIGN_KEY_CHECKS=0;

-- LCE_ROLE_CREATION
	DROP TABLE IF EXISTS LCE_ROLE_CREATION;
	CREATE TABLE LCE_ROLE_CREATION(
	RC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ROLE_NAME VARCHAR(50) NOT NULL);

	SET @ALTER_LCE_ROLE_CREATION = (SELECT CONCAT('ALTER TABLE LCE_ROLE_CREATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_ROLE_CREATION_STMT FROM @ALTER_LCE_ROLE_CREATION;
	EXECUTE ALTER_LCE_ROLE_CREATION_STMT;

	INSERT INTO LCE_ROLE_CREATION(ROLE_NAME)VALUES('ADMIN');

-- LCE_USER_MANAGEMENT
	DROP TABLE IF EXISTS LCE_USER_MANAGEMENT;
	CREATE TABLE LCE_USER_MANAGEMENT(
	ULD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ULD_USERNAME VARCHAR(40) UNIQUE NOT NULL,
	ULD_PASSWORD TEXT NOT NULL,
	ULD_EMPLOYEE_NAME VARCHAR(40) NOT NULL,
	ULD_MAIL_ID VARCHAR(50) NOT NULL,
	ULD_DESIGNATION VARCHAR(50) NOT NULL,
	RC_ID INTEGER NOT NULL,
	ULD_IMAGE_NAME VARCHAR(50),
	ULD_USERSTAMP INTEGER NOT NULL,
	ULD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(RC_ID) REFERENCES LCE_ROLE_CREATION (RC_ID));

	SET @ALTER_LCE_USER_MANAGEMENT = (SELECT CONCAT('ALTER TABLE LCE_USER_MANAGEMENT AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_USER_MANAGEMENT_STMT FROM @ALTER_LCE_USER_MANAGEMENT;
	EXECUTE ALTER_LCE_USER_MANAGEMENT_STMT;

	INSERT INTO LCE_USER_MANAGEMENT(ULD_USERNAME,ULD_PASSWORD,ULD_EMPLOYEE_NAME,ULD_MAIL_ID,ULD_DESIGNATION,RC_ID,ULD_USERSTAMP)VALUES
	('admin','YWRtaW4xMjM=','testabc','admin@gmail.com','Developer',1,1);

-- LCE_TYPE_OF_PROJECT
	DROP TABLE IF EXISTS LCE_TYPE_OF_PROJECT;
	CREATE TABLE LCE_TYPE_OF_PROJECT(
	TOP_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TOP_TYPE VARCHAR(50) NOT NULL);

	SET @ALTER_LCE_TYPE_OF_PROJECT = (SELECT CONCAT('ALTER TABLE LCE_TYPE_OF_PROJECT AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TYPE_OF_PROJECT_STMT FROM @ALTER_LCE_TYPE_OF_PROJECT;
	EXECUTE ALTER_LCE_TYPE_OF_PROJECT_STMT;

-- LCE_CHECKLIST
	DROP TABLE IF EXISTS LCE_CHECKLIST;
	CREATE TABLE LCE_CHECKLIST(
	CL_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	CL_DATA TEXT NOT NULL);

	SET @ALTER_LCE_CHECKLIST = (SELECT CONCAT('ALTER TABLE LCE_CHECKLIST AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_CHECKLIST_STMT FROM @ALTER_LCE_CHECKLIST;
	EXECUTE ALTER_LCE_CHECKLIST_STMT;

-- LCE_PROJECT_LOCATION
	DROP TABLE IF EXISTS LCE_PROJECT_LOCATION;
	CREATE TABLE LCE_PROJECT_LOCATION(
	PL_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PL_LOCATION VARCHAR(50) NOT NULL);

	SET @ALTER_LCE_PROJECT_LOCATION = (SELECT CONCAT('ALTER TABLE LCE_PROJECT_LOCATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_PROJECT_LOCATION_STMT FROM @ALTER_LCE_PROJECT_LOCATION;
	EXECUTE ALTER_LCE_PROJECT_LOCATION_STMT;

-- LCE_TENDER_ITEMS
	DROP TABLE IF EXISTS LCE_TENDER_ITEMS;
	CREATE TABLE LCE_TENDER_ITEMS(
	TI_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TI_ITEMS VARCHAR(60) NOT NULL);

	SET @ALTER_LCE_TENDER_ITEMS = (SELECT CONCAT('ALTER TABLE LCE_TENDER_ITEMS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_ITEMS_STMT FROM @ALTER_LCE_TENDER_ITEMS;
	EXECUTE ALTER_LCE_TENDER_ITEMS_STMT;

-- LCE_TENDER_SUB_ITEMS
	DROP TABLE IF EXISTS LCE_TENDER_SUB_ITEMS;
	CREATE TABLE LCE_TENDER_SUB_ITEMS(
	TSI_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TI_ID INTEGER NOT NULL,
	TSI_ITEMS VARCHAR(300),
	TSI_SNO VARCHAR(10),
	TSI_FLAG CHAR(2),
	TSI_DESCRIPTION_TYPE VARCHAR(100),
	FOREIGN KEY(TI_ID) REFERENCES LCE_TENDER_ITEMS (TI_ID));

	SET @ALTER_LCE_TENDER_SUB_ITEMS = (SELECT CONCAT('ALTER TABLE LCE_TENDER_SUB_ITEMS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_SUB_ITEMS_STMT FROM @ALTER_LCE_TENDER_SUB_ITEMS;
	EXECUTE ALTER_LCE_TENDER_SUB_ITEMS_STMT;

-- LCE_PRICE_TYPE
	DROP TABLE IF EXISTS LCE_PRICE_TYPE;
	CREATE TABLE LCE_PRICE_TYPE(
	PT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PT_TYPE VARCHAR(50) NOT NULL,
	TOP_ID INTEGER NOT NULL,
	FOREIGN KEY(TOP_ID) REFERENCES LCE_TYPE_OF_PROJECT (TOP_ID));

	SET @ALTER_LCE_PRICE_TYPE = (SELECT CONCAT('ALTER TABLE LCE_PRICE_TYPE AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_PRICE_TYPE_STMT FROM @ALTER_LCE_PRICE_TYPE;
	EXECUTE ALTER_LCE_PRICE_TYPE_STMT;

-- LCE_ITEM_PRICE_DETAILS
	DROP TABLE IF EXISTS LCE_ITEM_PRICE_DETAILS;
	CREATE TABLE LCE_ITEM_PRICE_DETAILS(
	IPD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TI_ID INTEGER NOT NULL,
	TSI_ID INTEGER NOT NULL ,
	IPD_CODENO VARCHAR(10),
	IPD_SNO VARCHAR(10) NOT NULL,
	IPD_DESCRIPTION TEXT NOT NULL,
	PT_ID INTEGER NOT NULL,
	IPD_MATERIAL_COST DECIMAL(10,2),
	IPD_WIRING_COST DECIMAL(10,2),
	IPD_LABOUR_COST DECIMAL(10,2),
	IPD_CABLE_PRICE INTEGER,
	IPD_UNIT_RATE DECIMAL(10,2),
	ULD_ID INTEGER NOT NULL,
	IPD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(TI_ID) REFERENCES LCE_TENDER_ITEMS (TI_ID),
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID),
	FOREIGN KEY(PT_ID) REFERENCES LCE_PRICE_TYPE  (PT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID));

	SET @ALTER_LCE_ITEM_PRICE_DETAILS = (SELECT CONCAT('ALTER TABLE LCE_ITEM_PRICE_DETAILS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_ITEM_PRICE_DETAILS_STMT FROM @ALTER_LCE_ITEM_PRICE_DETAILS;
	EXECUTE ALTER_LCE_ITEM_PRICE_DETAILS_STMT;

-- LCE_FILE_TEMPLATE
	DROP TABLE IF EXISTS LCE_FILE_TEMPLATE;
	CREATE TABLE LCE_FILE_TEMPLATE(
	FT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FT_PARENT_ID INTEGER NOT NULL,
	FT_DATA VARCHAR(200) NOT NULL);

	SET @ALTER_LCE_FILE_TEMPLATE = (SELECT CONCAT('ALTER TABLE LCE_FILE_TEMPLATE AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_FILE_TEMPLATE_STMT FROM @ALTER_LCE_FILE_TEMPLATE;
	EXECUTE ALTER_LCE_FILE_TEMPLATE_STMT;

-- LCE_CABLING_TYPE
	DROP TABLE IF EXISTS LCE_CABLING_TYPE;
	CREATE TABLE LCE_CABLING_TYPE(
	CT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TSI_ID INTEGER NOT NULL,
	CT_DATA VARCHAR(50) NOT NULL,
	CT_SUBDATA VARCHAR(50),
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID));

	SET @ALTER_LCE_CABLING_TYPE = (SELECT CONCAT('ALTER TABLE LCE_CABLING_TYPE AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_CABLING_TYPE_STMT FROM @ALTER_LCE_CABLING_TYPE;
	EXECUTE ALTER_LCE_CABLING_TYPE_STMT;

-- LCE_AMPERE_RATING
	DROP TABLE IF EXISTS LCE_AMPERE_RATING;
	CREATE TABLE LCE_AMPERE_RATING(
	AR_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TSI_ID INTEGER NOT NULL,
	AR_DATA VARCHAR(50) NOT NULL,
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID));

	SET @ALTER_LCE_AMPERE_RATING = (SELECT CONCAT('ALTER TABLE LCE_AMPERE_RATING AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_AMPERE_RATING_STMT FROM @ALTER_LCE_AMPERE_RATING;
	EXECUTE ALTER_LCE_AMPERE_RATING_STMT;

-- LCE_ITEM_DESCRIPTION
	DROP TABLE IF EXISTS LCE_ITEM_DESCRIPTION;
	CREATE TABLE LCE_ITEM_DESCRIPTION(
	ID_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TSI_ID INTEGER NOT NULL,
	ID_DATA VARCHAR(50) NOT NULL,
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID));

	SET @ALTER_LCE_ITEM_DESCRIPTION = (SELECT CONCAT('ALTER TABLE LCE_ITEM_DESCRIPTION AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_ITEM_DESCRIPTION_STMT FROM @ALTER_LCE_ITEM_DESCRIPTION;
	EXECUTE ALTER_LCE_ITEM_DESCRIPTION_STMT;

-- LCE_POWER_FACTOR
	DROP TABLE IF EXISTS LCE_POWER_FACTOR;
	CREATE TABLE LCE_POWER_FACTOR(
	PF_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TSI_ID INTEGER NOT NULL,
	PF_DATA VARCHAR(50) NOT NULL,
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID));

	SET @ALTER_LCE_POWER_FACTOR = (SELECT CONCAT('ALTER TABLE LCE_POWER_FACTOR AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_POWER_FACTOR_STMT FROM @ALTER_LCE_POWER_FACTOR;
	EXECUTE ALTER_LCE_POWER_FACTOR_STMT;

-- LCE_ITEM_BRAND
	DROP TABLE IF EXISTS LCE_ITEM_BRAND;
	CREATE TABLE LCE_ITEM_BRAND(
	IB_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TSI_ID INTEGER NOT NULL,
	IB_DATA VARCHAR(50) NOT NULL,
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID));

	SET @ALTER_LCE_ITEM_BRAND = (SELECT CONCAT('ALTER TABLE LCE_ITEM_BRAND AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_ITEM_BRAND_STMT FROM @ALTER_LCE_ITEM_BRAND;
	EXECUTE ALTER_LCE_ITEM_BRAND_STMT;

-- LCE_TENDER_STATUS
	DROP TABLE IF EXISTS LCE_TENDER_STATUS;
	CREATE TABLE LCE_TENDER_STATUS(
	TS_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TS_STATUS VARCHAR(10) NOT NULL);

	SET @ALTER_LCE_TENDER_STATUS = (SELECT CONCAT('ALTER TABLE LCE_TENDER_STATUS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_STATUS_STMT FROM @ALTER_LCE_TENDER_STATUS;
	EXECUTE ALTER_LCE_TENDER_STATUS_STMT;

-- LCE_PROJECT_TITLE
	DROP TABLE IF EXISTS LCE_PROJECT_TITLE;
	CREATE TABLE LCE_PROJECT_TITLE(
	LPT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	LPT_PROJECT_TITLE VARCHAR(200) UNIQUE NOT NULL,
	LPT_TENDER_REF_NO VARCHAR(30) UNIQUE NOT NULL,
	LPT_START_DATE DATE NOT NULL,
	LPT_CLOSING_DATE DATE NOT NULL,
	ULD_ID INTEGER NOT NULL,
	LPT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID));

	SET @ALTER_LCE_PROJECT_TITLE = (SELECT CONCAT('ALTER TABLE LCE_PROJECT_TITLE AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_PROJECT_TITLE_STMT FROM @ALTER_LCE_PROJECT_TITLE;
	EXECUTE ALTER_LCE_PROJECT_TITLE_STMT;

-- LCE_TENDER_MANAGEMENT
	DROP TABLE IF EXISTS LCE_TENDER_MANAGEMENT;
	CREATE TABLE LCE_TENDER_MANAGEMENT(
	TM_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	LPT_ID INTEGER NOT NULL,
	TM_MAIN_CONTRACTOR VARCHAR(200) NOT NULL,
	TM_ARCHITECT_CONSULTANT VARCHAR(200) NOT NULL,
	TM_ME_CONSULTANT VARCHAR(200) NOT NULL,
	TS_ID INTEGER NOT NULL,
	TOP_ID INTEGER NOT NULL,
	PT_ID INTEGER NOT NULL,
	TM_REV_NO INTEGER NOT NULL,
	TM_PREPARED_BY INTEGER NOT NULL,
	TM_CHECKED_BY INTEGER,
	TM_APPROVED_BY INTEGER,
	ULD_ID INTEGER NOT NULL,
	TM_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(TOP_ID) REFERENCES LCE_TYPE_OF_PROJECT (TOP_ID),
	FOREIGN KEY(TS_ID) REFERENCES  LCE_TENDER_STATUS (TS_ID),
	FOREIGN KEY(PT_ID) REFERENCES  LCE_PRICE_TYPE (PT_ID),
	FOREIGN KEY(TM_PREPARED_BY) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(LPT_ID) REFERENCES  LCE_PROJECT_TITLE (LPT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID));

	SET @ALTER_LCE_TENDER_MANAGEMENT = (SELECT CONCAT('ALTER TABLE LCE_TENDER_MANAGEMENT AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_MANAGEMENT_STMT FROM @ALTER_LCE_TENDER_MANAGEMENT;
	EXECUTE ALTER_LCE_TENDER_MANAGEMENT_STMT;

-- LCE_TENDER_CHECKLIST
	DROP TABLE IF EXISTS LCE_TENDER_CHECKLIST;
	CREATE TABLE LCE_TENDER_CHECKLIST(
	TC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TM_ID INTEGER NOT NULL,
	CL_ID INTEGER NOT NULL,
	TC_FLAG CHAR(1),
	TC_OTHER_DETAILS TEXT,
	TC_REMARKS TEXT,
	ULD_ID INTEGER NOT NULL,
	TC_PREPARED_BY INTEGER NOT NULL,
	TC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(TM_ID) REFERENCES LCE_TENDER_MANAGEMENT (TM_ID),
	FOREIGN KEY(CL_ID) REFERENCES LCE_CHECKLIST (CL_ID),
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(TC_PREPARED_BY) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID));

	SET @ALTER_LCE_TENDER_CHECKLIST = (SELECT CONCAT('ALTER TABLE LCE_TENDER_CHECKLIST AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_CHECKLIST_STMT FROM @ALTER_LCE_TENDER_CHECKLIST;
	EXECUTE ALTER_LCE_TENDER_CHECKLIST_STMT;

-- LCE_TENDER_FILE_TEMPLATE_DETAILS
	DROP TABLE IF EXISTS LCE_TENDER_FILE_TEMPLATE_DETAILS;
	CREATE TABLE LCE_TENDER_FILE_TEMPLATE_DETAILS(
	TFTD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TM_ID INTEGER NOT NULL,
	FT_ID INTEGER NOT NULL,
	TFTD_FLAG CHAR(1),
	ULD_ID INTEGER NOT NULL,
	TFTD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(TM_ID) REFERENCES LCE_TENDER_MANAGEMENT (TM_ID),
	FOREIGN KEY(FT_ID) REFERENCES LCE_FILE_TEMPLATE (FT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID));

	SET @ALTER_LCE_TENDER_FILE_TEMPLATE_DETAILS = (SELECT CONCAT('ALTER TABLE LCE_TENDER_FILE_TEMPLATE_DETAILS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_FILE_TEMPLATE_DETAILS_STMT FROM @ALTER_LCE_TENDER_FILE_TEMPLATE_DETAILS;
	EXECUTE ALTER_LCE_TENDER_FILE_TEMPLATE_DETAILS_STMT;

-- LCE_TENDER_SUMMARY_DETAILS
	DROP TABLE IF EXISTS LCE_TENDER_SUMMARY_DETAILS;
	CREATE TABLE LCE_TENDER_SUMMARY_DETAILS(
	TMD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TM_ID INTEGER NOT NULL,
	IPD_ID INTEGER NULL,
	TIPD_ID INTEGER NULL,
	TMD_QUANTITY INTEGER,
	TMD_UNIT_RATE DECIMAL(7,2),
	TMD_CPF DECIMAL(7,2),
	TMD_MATERIAL_COST DECIMAL(15,2),
	TMD_WIRING_COST DECIMAL(15,2),
	TMD_LABOUR_COST DECIMAL(15,2),
	CT_ID INTEGER,
	AR_ID INTEGER,
	ID_ID INTEGER,
	PF_ID INTEGER,
	IB_ID INTEGER,
	TMD_FROM_LOCATION INTEGER,
	TMD_TO_LOCATION INTEGER,
	TMD_MARK_DOWN INTEGER,
	TMD_TENDER_MATERIAL_COST DECIMAL(15,2),
	TMD_TENDER_WIRING_COST DECIMAL(15,2),
	TMD_TENDER_LABOUR_COST DECIMAL(15,2),
	TMD_BASE_PRICE DECIMAL(15,2) NOT NULL,
	TMD_TENDER_PRICE DECIMAL(15,2),
	TMD_COST_TRANSFER DECIMAL(7,2),
	TMD_AFTER_TRANSFER DECIMAL(15,2),
	TMD_REMARKS TEXT,
	ULD_ID INTEGER NOT NULL,
	TMD_CABLE_PRICE INTEGER NULL,
	TMD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(TM_ID) REFERENCES LCE_TENDER_MANAGEMENT (TM_ID));
	
	
-- 	CREATE TABLE `LCE_TENDER_SUMMARY_DETAILS` (
--   `TMD_ID` int(11) NOT NULL AUTO_INCREMENT,
--   `TM_ID` int(11) NOT NULL,
--   `IPD_ID` int(11) NOT NULL,
--   `TMD_QUANTITY` int(11) DEFAULT NULL,
--   `TMD_UNIT_RATE` decimal(7,2) DEFAULT NULL,
--   `TMD_CPF` decimal(7,2) DEFAULT NULL,
--   `TMD_MATERIAL_COST` decimal(15,2) DEFAULT NULL,
--   `TMD_WIRING_COST` decimal(15,2) DEFAULT NULL,
--   `TMD_LABOUR_COST` decimal(15,2) DEFAULT NULL,
--   `CT_ID` int(11) DEFAULT NULL,
--   `AR_ID` int(11) DEFAULT NULL,
--   `ID_ID` int(11) DEFAULT NULL,
--   `PF_ID` int(11) DEFAULT NULL,
--   `IB_ID` int(11) DEFAULT NULL,
--   `TMD_FROM_LOCATION` int(11) DEFAULT NULL,
--   `TMD_TO_LOCATION` int(11) DEFAULT NULL,
--   `TMD_MARK_DOWN` int(11) DEFAULT NULL,
--   `TMD_TENDER_MATERIAL_COST` decimal(15,2) DEFAULT NULL,
--   `TMD_TENDER_WIRING_COST` decimal(15,2) DEFAULT NULL,
--   `TMD_TENDER_LABOUR_COST` decimal(15,2) DEFAULT NULL,
--   `TMD_BASE_PRICE` decimal(15,2) NOT NULL,
--   `TMD_TENDER_PRICE` decimal(15,2) DEFAULT NULL,
--   `TMD_COST_TRANSFER` decimal(7,2) DEFAULT NULL,
--   `TMD_AFTER_TRANSFER` decimal(15,2) DEFAULT NULL,
--   `TMD_REMARKS` text,
--   `ULD_ID` int(11) NOT NULL,
--   `TMD_TIMESTAMP` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
--   PRIMARY KEY (`TMD_ID`),
--   KEY `ULD_ID` (`ULD_ID`),
--   KEY `TM_ID` (`TM_ID`),
--   KEY `IPD_ID` (`IPD_ID`),
--   CONSTRAINT `LCE_TENDER_SUMMARY_DETAILS_ibfk_1` FOREIGN KEY (`ULD_ID`) REFERENCES `LCE_USER_MANAGEMENT` (`ULD_ID`),
--   CONSTRAINT `LCE_TENDER_SUMMARY_DETAILS_ibfk_2` FOREIGN KEY (`TM_ID`) REFERENCES `LCE_TENDER_MANAGEMENT` (`TM_ID`),
--   CONSTRAINT `LCE_TENDER_SUMMARY_DETAILS_ibfk_3` FOREIGN KEY (`IPD_ID`) REFERENCES `LCE_ITEM_PRICE_DETAILS` (`IPD_ID`)
-- ) ENGINE=InnoDB AUTO_INCREMENT=1408 DEFAULT CHARSET=latin1;

	SET @ALTER_LCE_TENDER_SUMMARY_DETAILS = (SELECT CONCAT('ALTER TABLE LCE_TENDER_SUMMARY_DETAILS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_SUMMARY_DETAILS_STMT FROM @ALTER_LCE_TENDER_SUMMARY_DETAILS;
	EXECUTE ALTER_LCE_TENDER_SUMMARY_DETAILS_STMT;

-- LCE_ERROR_MESSAGE_CONFIGURATION
	DROP TABLE IF EXISTS LCE_ERROR_MESSAGE_CONFIGURATION;
	CREATE TABLE LCE_ERROR_MESSAGE_CONFIGURATION(
	EMC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	EMC_DATA TEXT NOT NULL);

	SET @ALTER_LCE_ERROR_MESSAGE_CONFIGURATION = (SELECT CONCAT('ALTER TABLE LCE_ERROR_MESSAGE_CONFIGURATION AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_ERROR_MESSAGE_CONFIGURATION_STMT FROM @ALTER_LCE_ERROR_MESSAGE_CONFIGURATION;
	EXECUTE ALTER_LCE_ERROR_MESSAGE_CONFIGURATION_STMT;

-- LCE_TENDER_SUB_TOTAL
	DROP TABLE IF EXISTS LCE_TENDER_SUB_TOTAL;
	CREATE TABLE LCE_TENDER_SUB_TOTAL(
	TST_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TM_ID INTEGER NOT NULL,
	TI_ID INTEGER NOT NULL,
	TSI_ID INTEGER NOT NULL,
	TST_TENDER_PRICE DECIMAL(15,2) NOT NULL,
	TST_COST_TRANSFER DECIMAL(15,2),
	TST_AFTER_TRANSFER DECIMAL(15,2),
	ULD_ID INTEGER NOT NULL,
	TST_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(ULD_ID) REFERENCES  LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(TI_ID) REFERENCES  LCE_TENDER_ITEMS (TI_ID),
	FOREIGN KEY(TSI_ID) REFERENCES  LCE_TENDER_SUB_ITEMS (TSI_ID),
	FOREIGN KEY(TM_ID) REFERENCES  LCE_TENDER_MANAGEMENT (TM_ID));

	SET @ALTER_LCE_TENDER_SUB_TOTAL = (SELECT CONCAT('ALTER TABLE LCE_TENDER_SUB_TOTAL AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_TENDER_SUB_TOTAL_STMT FROM @ALTER_LCE_TENDER_SUB_TOTAL;
	EXECUTE ALTER_LCE_TENDER_SUB_TOTAL_STMT;
	
	DROP TABLE IF EXISTS LCE_MANUAL_KEY_IN_DETAILS;
	CREATE TABLE LCE_MANUAL_KEY_IN_DETAILS(
	MKID_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TMD_ID INTEGER NOT NULL,
	MKID_DESCRIPTION TEXT NOT NULL,
	ULD_ID INTEGER NOT NULL,
	MKID_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(ULD_ID) REFERENCES LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(TMD_ID) REFERENCES LCE_TENDER_SUMMARY_DETAILS (TMD_ID));
	
	SET @ALTER_LCE_MANUAL_KEY_IN_DETAILS = (SELECT CONCAT('ALTER TABLE LCE_MANUAL_KEY_IN_DETAILS AUTO_INCREMENT = 0'));
	PREPARE ALTER_LCE_MANUAL_KEY_IN_DETAILS_STMT FROM @ALTER_LCE_MANUAL_KEY_IN_DETAILS;
	EXECUTE ALTER_LCE_MANUAL_KEY_IN_DETAILS_STMT;
	
	DROP TABLE IF EXISTS LCE_TEMP_TABLE_DETAILS;
	CREATE TABLE LCE_TEMP_TABLE_DETAILS(TTD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TTD_DATE DATE,
	TTD_TABLE_NAME TEXT,
	TTD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
	
	DROP TABLE IF EXISTS LCE_TENDER_ITEM_PRICE_DETAILS;
	CREATE TABLE LCE_TENDER_ITEM_PRICE_DETAILS(
	TIPD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TM_ID INTEGER NOT NULL,
	TI_ID INTEGER NOT NULL,
	TSI_ID INTEGER NOT NULL,
	TIPD_CODENO VARCHAR(10) NULL,
	TIPD_SNO VARCHAR(10) NOT NULL,
	TIPD_DESCRIPTION TEXT NOT NULL,
	ULD_ID INTEGER NOT NULL,
	TIPD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(ULD_ID) REFERENCES LCE_USER_MANAGEMENT (ULD_ID),
	FOREIGN KEY(TM_ID) REFERENCES LCE_TENDER_MANAGEMENT (TM_ID),
	FOREIGN KEY(TI_ID) REFERENCES LCE_TENDER_ITEMS (TI_ID),
	FOREIGN KEY(TSI_ID) REFERENCES LCE_TENDER_SUB_ITEMS (TSI_ID)
	);
	
	SET SUCCESS_MESSAGE=1;

	COMMIT;

END;

CALL SP_LCE_TABLE_CREATION(@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE;
DROP PROCEDURE IF EXISTS SP_LCE_TABLE_CREATION;