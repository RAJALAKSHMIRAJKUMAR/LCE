-- VERSION:0.3 --DATE:07/04/2015 --DESC:COST TRANSFER UPDATE SP (SUB TOTAL AMOUNT ARRAY NOT DEPEND ON REMARKS ARRAY ) --DONEBY:RL
-- VERSION:0.2 --DATE:02/04/2015 --DESC:CHANGED SP AS PER NEW TABLE DESIGN --DONEBY:RL
--version:0.1 sdate:30/03/2015 --desc:cost transfer update sp --done by:rl

DROP PROCEDURE IF EXISTS SP_LCE_COST_TRANSFER_UPDATE;
CREATE PROCEDURE SP_LCE_COST_TRANSFER_UPDATE(
IN PROJECT_ID INTEGER,
IN SUBITEM_ID TEXT,
IN COST_TRANSFERAMT TEXT,
IN AFTER_TRANSFERAMT TEXT,
IN SDTLS_IPDID TEXT,
IN SDTLS_REMARKS TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESSFLAG TEXT)

BEGIN

	DECLARE USERSTAMP_ID INTEGER;

	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE TEMP_LCE_COSTAMT_DTLS TEXT;
	DECLARE COSTAMT DECIMAL(15,2);
	DECLARE SUM_OF_COSTAMT DECIMAL(15,2);

	DECLARE SUB_ITEM_ID INTEGER;
	DECLARE TSTID INTEGER;
	DECLARE COST_TRANSFER_AMT DECIMAL(15,2);
	DECLARE AFTER_TRANSFER_AMT DECIMAL(15,2);
	DECLARE SDTLS_IPD_ID INTEGER;
	DECLARE TMDID INTEGER;
	DECLARE SDTLSREMARKS TEXT;
	
-- ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		IF(TEMP_LCE_COSTAMT_DTLS IS NOT NULL) THEN
			SET @DROP_TEMP_LCE_COSTAMT_DTLS = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LCE_COSTAMT_DTLS,''));
			PREPARE DROP_TEMP_LCE_COSTAMT_DTLS_STMT FROM @DROP_TEMP_LCE_COSTAMT_DTLS;
			EXECUTE DROP_TEMP_LCE_COSTAMT_DTLS_STMT;
		END IF;
		SET SUCCESSFLAG = 0;
	END;

	START TRANSACTION;
	SET AUTOCOMMIT=0;
	SET SUCCESSFLAG = 0;

-- SUB SP FOR CONVERTING USERSTAMP INTO ULDID
	CALL SP_LCE_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@USER_ID);
	SET USERSTAMP_ID=@USER_ID;

	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));

	SET TEMP_LCE_COSTAMT_DTLS=(SELECT CONCAT('TEMP_LCE_COSTAMT_DTLS','_',SYSDATEANDULDID));

	SET @CREATE_TEMP_LCE_COSTAMT_DTLS = (SELECT CONCAT('CREATE TABLE ',TEMP_LCE_COSTAMT_DTLS,' (
	ID INTEGER AUTO_INCREMENT,
	COST_TRANSFER_AMOUNT DECIMAL(15,2),
	PRIMARY KEY(ID))'));
	PREPARE CREATE_TEMP_LCE_COSTAMT_DTLS_STMT FROM @CREATE_TEMP_LCE_COSTAMT_DTLS;
	EXECUTE CREATE_TEMP_LCE_COSTAMT_DTLS_STMT;

	SET @TEMPCOST_TRANSFERAMT = COST_TRANSFERAMT;

	MAINLOOP : LOOP

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMPCOST_TRANSFERAMT,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO COSTAMT;
		SELECT @REMAINING_STRING INTO @TEMPCOST_TRANSFERAMT;

		SET @INSERT_TEMP_LCE_COSTAMT_DTLS = (SELECT CONCAT('INSERT INTO ',TEMP_LCE_COSTAMT_DTLS,'(COST_TRANSFER_AMOUNT) VALUES (',COSTAMT,')'));
		PREPARE INSERT_TEMP_LCE_COSTAMT_DTLS_STMT FROM @INSERT_TEMP_LCE_COSTAMT_DTLS;
		EXECUTE INSERT_TEMP_LCE_COSTAMT_DTLS_STMT;

		IF(@TEMPCOST_TRANSFERAMT IS NULL) THEN 
			LEAVE  MAINLOOP;
		END IF;

	END LOOP;

	SET @COSTTOTAL = (SELECT CONCAT('SELECT SUM(COST_TRANSFER_AMOUNT) INTO @TOTAL_COST FROM ',TEMP_LCE_COSTAMT_DTLS,''));
	PREPARE COSTTOTAL_STMT FROM @COSTTOTAL;
	EXECUTE COSTTOTAL_STMT;

	SET SUM_OF_COSTAMT = @TOTAL_COST;

	IF(SUM_OF_COSTAMT = 0.00) THEN
		SET SUM_OF_COSTAMT = 0;
	END IF;

	SET @TEMP_SUBITEM_ID = SUBITEM_ID;
	SET @TEMP_COST_TRANSFERAMT = COST_TRANSFERAMT;
	SET @TEMP_AFTER_TRANSFERAMT = AFTER_TRANSFERAMT;
	SET @TEMP_SDTLS_IPDID = SDTLS_IPDID;
	SET @TEMP_SDTLS_REMARKS = SDTLS_REMARKS;

	IF(SUM_OF_COSTAMT = 0) THEN

		IF(PROJECT_ID IS NOT NULL AND SUBITEM_ID IS NOT NULL AND COST_TRANSFERAMT IS NOT NULL AND 
		AFTER_TRANSFERAMT IS NOT NULL AND USERSTAMP IS NOT NULL) THEN

			MAIN_LOOP : LOOP

				CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_SUBITEM_ID,@VALUE,@REMAINING_STRING);
				SELECT @VALUE INTO SUB_ITEM_ID;
				SELECT @REMAINING_STRING INTO @TEMP_SUBITEM_ID;

				SET TSTID = (SELECT TST_ID FROM LCE_TENDER_SUB_TOTAL WHERE TSI_ID = SUB_ITEM_ID AND TM_ID = PROJECT_ID);

				CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_COST_TRANSFERAMT,@VALUE,@REMAINING_STRING);
				SELECT @VALUE INTO COST_TRANSFER_AMT;
				SELECT @REMAINING_STRING INTO @TEMP_COST_TRANSFERAMT;

				CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_AFTER_TRANSFERAMT,@VALUE,@REMAINING_STRING);
				SELECT @VALUE INTO AFTER_TRANSFER_AMT;
				SELECT @REMAINING_STRING INTO @TEMP_AFTER_TRANSFERAMT;

				UPDATE LCE_TENDER_SUB_TOTAL SET TST_COST_TRANSFER = COST_TRANSFER_AMT,TST_AFTER_TRANSFER=AFTER_TRANSFER_AMT,
				ULD_ID=USERSTAMP_ID WHERE TST_ID = TSTID;

				IF(@TEMP_SUBITEM_ID IS NULL) THEN 
					LEAVE  MAIN_LOOP;
				END IF;

			END LOOP;
			
			UPDATE LCE_TENDER_SUB_TOTAL SET TST_COST_TRANSFER=0.00, ULD_ID=USERSTAMP_ID WHERE TST_COST_TRANSFER IS NULL AND 
			TM_ID = PROJECT_ID;

			UPDATE LCE_TENDER_SUB_TOTAL SET TST_AFTER_TRANSFER = TST_TENDER_PRICE+TST_COST_TRANSFER, ULD_ID=USERSTAMP_ID
			WHERE TST_AFTER_TRANSFER IS NULL AND TM_ID = PROJECT_ID;
			
		END IF;

		IF(PROJECT_ID IS NOT NULL AND SDTLS_IPDID IS NOT NULL AND SDTLS_REMARKS IS NOT NULL AND
		USERSTAMP IS NOT NULL) THEN

			SDTLSMAIN_LOOP : LOOP

				CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_SDTLS_IPDID,@VALUE,@REMAINING_STRING);
				SELECT @VALUE INTO SDTLS_IPD_ID;
				SELECT @REMAINING_STRING INTO @TEMP_SDTLS_IPDID;

				SET TMDID = (SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID = SDTLS_IPD_ID AND TM_ID = PROJECT_ID);

				CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_SDTLS_REMARKS,@VALUE,@REMAINING_STRING);
				SELECT @VALUE INTO SDTLSREMARKS;
				SELECT @REMAINING_STRING INTO @TEMP_SDTLS_REMARKS;

				IF(SDTLSREMARKS='') THEN
					SET SDTLSREMARKS = NULL;
				END IF;

				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_REMARKS=SDTLSREMARKS,ULD_ID=USERSTAMP_ID
				WHERE TMD_ID=TMDID;

				IF(@TEMP_SDTLS_IPDID IS NULL) THEN
					LEAVE SDTLSMAIN_LOOP;
				END IF;

			END LOOP;

		END IF;

		SET SUCCESSFLAG = 1;

	END IF;

	IF(TEMP_LCE_COSTAMT_DTLS IS NOT NULL) THEN
		SET @DROP_TEMP_LCE_COSTAMT_DTLS = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LCE_COSTAMT_DTLS,''));
		PREPARE DROP_TEMP_LCE_COSTAMT_DTLS_STMT FROM @DROP_TEMP_LCE_COSTAMT_DTLS;
		EXECUTE DROP_TEMP_LCE_COSTAMT_DTLS_STMT;
	END IF;

	COMMIT;

END;

/*
call SP_LCE_COST_TRANSFER_UPDATE(1,'9^^10^^12^^13','1001^^-1001^^2001^^-2001','1001^^2001^^3001^^4001',
'65^^66^^136^^137','A^^B^^D^^C^^','admin',@SUCCESSFLAG);
select @SUCCESSFLAG;
*/