-- VER 0.1 DATE:01/04/2014 DESC: SP TO UPDATE MARGIN CALCULATION DONE BY DHIVYA


DROP PROCEDURE IF EXISTS SP_TENDER_SUMMARY_UPDATE;
CREATE PROCEDURE SP_TENDER_SUMMARY_UPDATE(TMID INTEGER,MARKDOWN INTEGER,USERSTAMP VARCHAR(50),OUT SUCCESS_MESSAGE INTEGER)
BEGIN
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE TIID INTEGER;
DECLARE TSIID TEXT;
DECLARE ID INTEGER;
DECLARE SUBTOTAL DECIMAL(15,2);
DECLARE USERSTAMP_ID INTEGER;
DECLARE T_MATERIAL_COST DECIMAL(15,2);
DECLARE T_WIRING_COST DECIMAL(15,2);
DECLARE T_LABOUR_COST DECIMAL(15,2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
	ROLLBACK;
	SET SUCCESS_MESSAGE=0;
END;

START TRANSACTION;
CALL SP_LCE_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULD_ID);
SET USERSTAMP_ID=@ULD_ID;

SET AUTOCOMMIT=0;
SET MINID=(SELECT MIN(IPD_ID) FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID);
SET MAXID=(SELECT MAX(IPD_ID) FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID);

	WHILE MINID <= MAXID DO
		IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=MINID) THEN
			SET TIID=(SELECT TI_ID FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=MINID);
			IF TIID=1 THEN
				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_MARK_DOWN=MARKDOWN, TMD_TENDER_MATERIAL_COST=(((TMD_QUANTITY*TMD_UNIT_RATE)+TMD_CPF)+((TMD_QUANTITY*TMD_UNIT_RATE)+TMD_CPF)*MARKDOWN/100),TMD_TENDER_PRICE=TMD_TENDER_MATERIAL_COST WHERE IPD_ID=MINID AND TM_ID=TMID;
			ELSEIF (TIID=11) OR (TIID=12) OR (TIID=13) THEN
				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_MARK_DOWN=MARKDOWN, TMD_TENDER_WIRING_COST=((TMD_QUANTITY*TMD_WIRING_COST)+((TMD_QUANTITY*TMD_WIRING_COST)*MARKDOWN/100)),TMD_TENDER_PRICE=TMD_TENDER_WIRING_COST WHERE IPD_ID=MINID AND TM_ID=TMID;
			ELSEIF (TIID=30) THEN
				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_MARK_DOWN=MARKDOWN,TMD_TENDER_MATERIAL_COST=((TMD_MATERIAL_COST)+(TMD_MATERIAL_COST)*MARKDOWN/100),TMD_TENDER_PRICE=TMD_TENDER_MATERIAL_COST WHERE IPD_ID=MINID AND TM_ID=TMID;
			ELSE
				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_MARK_DOWN=MARKDOWN,TMD_TENDER_MATERIAL_COST=((TMD_QUANTITY*TMD_MATERIAL_COST)+((TMD_QUANTITY*TMD_MATERIAL_COST)*MARKDOWN/100)),TMD_TENDER_WIRING_COST=(TMD_WIRING_COST+(TMD_WIRING_COST*MARKDOWN/100)),TMD_TENDER_LABOUR_COST=(TMD_LABOUR_COST+(TMD_LABOUR_COST*MARKDOWN/100)) WHERE IPD_ID=MINID AND TM_ID=TMID;
				SET T_MATERIAL_COST=(SELECT IF(TMD_TENDER_MATERIAL_COST IS NULL,'0.00',TMD_TENDER_MATERIAL_COST) FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID=MINID AND TM_ID=TMID);
				SET T_WIRING_COST=(SELECT IF(TMD_TENDER_WIRING_COST IS NULL,'0.00',TMD_TENDER_WIRING_COST) FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID=MINID AND TM_ID=TMID) ;
				SET T_LABOUR_COST=(SELECT IF(TMD_TENDER_LABOUR_COST IS NULL,'0.00',TMD_TENDER_LABOUR_COST) FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID=MINID AND TM_ID=TMID) ;
				UPDATE LCE_TENDER_SUMMARY_DETAILS SET TMD_TENDER_PRICE=(T_MATERIAL_COST+T_WIRING_COST+T_LABOUR_COST) WHERE IPD_ID=MINID AND TM_ID=TMID;
			END IF;
		END IF;
		SET MINID=MINID+1;
	END WHILE;

SET TSIID=(SELECT DISTINCT(GROUP_CONCAT( TSI_ID)) FROM LCE_TENDER_SUB_ITEMS WHERE TSI_FLAG IS NULL);
MAIN_LOOP : LOOP
	CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',TSIID,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO ID;
		SELECT @REMAINING_STRING INTO TSIID;
		SET TIID=(SELECT TI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ID=ID);
		SET SUBTOTAL=(SELECT SUM(TMD_TENDER_PRICE) FROM LCE_TENDER_SUMMARY_DETAILS TSD,LCE_ITEM_PRICE_DETAILS IPD WHERE TSD.TM_ID=TMID AND TSD.IPD_ID=IPD.IPD_ID AND IPD.TSI_ID=ID);
		IF SUBTOTAL IS NULL THEN
			SET SUBTOTAL=0;
		END IF;
		IF NOT EXISTS(SELECT TSI_ID FROM LCE_TENDER_SUB_TOTAL WHERE TM_ID=TMID AND TSI_ID=ID) THEN
			INSERT INTO LCE_TENDER_SUB_TOTAL(TM_ID,TI_ID,TSI_ID,TST_TENDER_PRICE,ULD_ID)VALUES
			(TMID,TIID,ID,SUBTOTAL,USERSTAMP_ID);
		ELSE
			UPDATE LCE_TENDER_SUB_TOTAL SET TST_TENDER_PRICE=SUBTOTAL,TST_AFTER_TRANSFER=(TST_TENDER_PRICE+TST_COST_TRANSFER),ULD_ID=USERSTAMP_ID WHERE TM_ID=TMID AND TSI_ID=ID AND TI_ID=TIID;
		END IF;

		IF TSIID='' IS NULL OR  TSIID='' THEN
			LEAVE  MAIN_LOOP;
		END IF;
END LOOP;
SET SUCCESS_MESSAGE=1;
COMMIT;
END;