

DROP PROCEDURE IF EXISTS SP_COST_TRANSFER_VIEW;
CREATE PROCEDURE SP_COST_TRANSFER_VIEW(
TMID INTEGER,
USERSTAMP VARCHAR(50),
OUT TEMPTABLE TEXT)
BEGIN
DECLARE TEMP_TABLE TEXT;
DECLARE TEMP_VIEW TEXT;
DECLARE USERSTAMP_ID INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
SET @DROP_QUERY=(SELECT CONCAT('DROP TABLE ',TEMP_VIEW));
PREPARE DROP_QUERY_STMT FROM @DROP_QUERY;
EXECUTE DROP_QUERY_STMT;
END;
START TRANSACTION;
SET AUTOCOMMIT=0;
CALL SP_LCE_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULD_ID);
SET USERSTAMP_ID=@ULD_ID;

SET TEMP_TABLE=(SELECT CONCAT('TEMP_COST_TRANSFER_VIEW',SYSDATE()));
SET TEMP_TABLE=(SELECT REPLACE(TEMP_TABLE,':',''));
SET TEMP_TABLE=(SELECT REPLACE(TEMP_TABLE,'-',''));
SET TEMP_TABLE=(SELECT REPLACE(TEMP_TABLE,' ',''));
SET TEMP_TABLE=(SELECT CONCAT(TEMP_TABLE,'_',USERSTAMP_ID));
SET TEMPTABLE=TEMP_TABLE;

SET @DROP_QUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMPTABLE));
PREPARE DROP_QUERY_STMT FROM @DROP_QUERY;
EXECUTE DROP_QUERY_STMT;

SET @CREATE_QUERY=(SELECT CONCAT('CREATE TABLE ',TEMPTABLE,'
	(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TI_ITEMS TEXT,
	TSI_SNO TEXT,
	TSI_ITEMS TEXT,
	TSI_DESCRIPTION TEXT,
	TENDER_SUBMISION_PRICE DECIMAL(15,2) DEFAULT 0.0,
	COST_TRANSFER DECIMAL(15,2),
	AFTER_TRANSFER DECIMAL(15,2),
	REMARKS TEXT,
	TSI_ID INTEGER,
	TMD_ID INTEGER,
	IPD_ID INTEGER)'));
PREPARE CREATE_QUERY_STMT FROM @CREATE_QUERY;
EXECUTE CREATE_QUERY_STMT;

CALL SP_TENDER_SUMMARY_VIEW(TMID,1,USERSTAMP,@TEMPMAINTABLE);
SET TEMP_VIEW=(SELECT @TEMPMAINTABLE );


SET @INSERT_QUERY=(SELECT CONCAT('INSERT INTO ',TEMPTABLE,'(TI_ITEMS,TSI_SNO,TSI_ITEMS,TSI_DESCRIPTION,TSI_ID,IPD_ID)
SELECT TI_ITEMS,TSI_SNO,TSI_ITEMS,TSI_DESCRIPTION,TSI_ID,IPD_ID FROM ',TEMP_VIEW));
PREPARE INSERT_QUERY_STMT FROM @INSERT_QUERY;
EXECUTE INSERT_QUERY_STMT;

SET @UPDATE_QUERY=(SELECT CONCAT('UPDATE ',TEMPTABLE,' L1,LCE_TENDER_SUMMARY_DETAILS L2 SET L1.REMARKS=L2.TMD_REMARKS,L1.TMD_ID=L2.TMD_ID,L1.TENDER_SUBMISION_PRICE=L2.TMD_TENDER_PRICE WHERE L1.IPD_ID=L2.IPD_ID AND L2.TM_ID=',TMID));
PREPARE UPDATE_QUERY_STMT FROM @UPDATE_QUERY;
EXECUTE UPDATE_QUERY_STMT;

SET @UPDATE_QUERY=(SELECT CONCAT('UPDATE ',TEMPTABLE,' L1,LCE_TENDER_SUB_TOTAL L2 SET L1.TENDER_SUBMISION_PRICE=L2.TST_TENDER_PRICE,L1.COST_TRANSFER=L2.TST_COST_TRANSFER,L1.AFTER_TRANSFER=L2.TST_AFTER_TRANSFER WHERE L1.TSI_ID=L2.TSI_ID AND L1.TSI_DESCRIPTION="SUB TOTAL" AND L2.TM_ID=',TMID));
PREPARE UPDATE_QUERY_STMT FROM @UPDATE_QUERY;
EXECUTE UPDATE_QUERY_STMT;

SET @SET_COST=(SELECT CONCAT('SELECT SUM(TENDER_SUBMISION_PRICE),SUM(COST_TRANSFER),SUM(AFTER_TRANSFER) INTO @COST1,@COST2,@COST3 FROM ',TEMPTABLE,' WHERE TSI_DESCRIPTION="SUB TOTAL"'));
PREPARE SET_COST_STMT FROM @SET_COST;
EXECUTE SET_COST_STMT;
SET @UPDATE_QUERY=(SELECT CONCAT('UPDATE ',TEMPTABLE,' SET TI_ITEMS="",TSI_SNO="",TSI_ITEMS="",TSI_DESCRIPTION="TOTAL",
TENDER_SUBMISION_PRICE=@COST1,COST_TRANSFER=@COST2,AFTER_TRANSFER=@COST3 WHERE TSI_DESCRIPTION="TOTAL"'));

PREPARE UPDATE_QUERY_STMT FROM @UPDATE_QUERY;
EXECUTE UPDATE_QUERY_STMT;


SET @DROP_QUERY=(SELECT CONCAT('DROP TABLE ',TEMP_VIEW));
PREPARE DROP_QUERY_STMT FROM @DROP_QUERY;
EXECUTE DROP_QUERY_STMT;

COMMIT;
END;

