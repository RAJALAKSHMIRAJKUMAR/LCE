-- VER0.4 DATE:21/04/2015 DESC: ADDED REMARKS AND FORM ID INPUT DONE BY:DHIVYA
-- VER0.3 DATE:17/04/2015 DESC:SP FOR TENDER INSERT & UPDATE(ADDED DELETE PART AND IMPLEMENTED ROLLBACK) DONE BY:DHIVYA

DROP PROCEDURE IF EXISTS SP_TENDER_ITEMS_INSERT_UPDATE;
CREATE PROCEDURE SP_TENDER_ITEMS_INSERT_UPDATE(
SEARCH_OPTION INTEGER,
TMID INTEGER,
LCEIPDID TEXT,
LCEDESCRIPTION LONGTEXT,
LCEQUANTITY TEXT,
LCEUNITRATE TEXT,
LCECPF TEXT,
LCEMATERIALCOST TEXT,
LCEWIRINGCOST TEXT,
LCELABOUR_COST TEXT,
CABLINGTYPE TEXT,
CABLINGDATA VARCHAR(50),
CABLING_SUBDATA VARCHAR(50),
AMPEREDATA VARCHAR(50),
IDTYPE VARCHAR(50),
IDDATA VARCHAR(50),
PFDATA VARCHAR(50),
IBDATA VARCHAR(50),
FROMLOCATION VARCHAR(50),
TOLOCATION VARCHAR(50),
COST_TRANSFER DECIMAL(7,2),
LCEREMARKS TEXT,
TIID INTEGER,
USERSTAMP VARCHAR(40),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
DECLARE MATER_COST  DECIMAL(15,2);
DECLARE BASEPRICE DECIMAL(15,2);
DECLARE IPDID INTEGER;
DECLARE DESCRIPTION TEXT;
DECLARE QUANTITY INTEGER;
DECLARE UNITRATE DECIMAL(7,2);
DECLARE CPF DECIMAL(7,2);
DECLARE WIRINGCOST DECIMAL(15,2);
DECLARE LABOUR_COST DECIMAL(15,2);
DECLARE CTID INTEGER;
DECLARE ARID INTEGER;
DECLARE DESC_ID INTEGER;
DECLARE PFID INTEGER;
DECLARE IBID INTEGER;
DECLARE FROMLOCID INTEGER;
DECLARE TOLOCID INTEGER;
DECLARE MATERIAL_COST DECIMAL(15,2);
DECLARE BASE_WIRING_COST DECIMAL(15,2);
DECLARE MARKDOWN INTEGER;
DECLARE TSIID INTEGER;
DECLARE T_MATERIAL_COST DECIMAL(15,2);
DECLARE T_WIRING_COST DECIMAL(15,2);
DECLARE T_LABOUR_COST DECIMAL(15,2);
DECLARE CHECK_DESC TEXT;
DECLARE TMDID INTEGER;
DECLARE LCE_TMDID TEXT;
DECLARE PTID INTEGER;
DECLARE REMARKS TEXT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
	ROLLBACK; 
		SET SUCCESS_MESSAGE=0;
	END;
	START TRANSACTION;
SET AUTOCOMMIT = 0;
IF SEARCH_OPTION=1 OR SEARCH_OPTION=2 THEN
	SET SUCCESS_MESSAGE=0;

	SET @LCE_IPDID=LCEIPDID;
	SET @LCE_DESCRIPTION=LCEDESCRIPTION;
	SET @LCE_QUANTITY=LCEQUANTITY;
	SET @LCE_UNITRATE=LCEUNITRATE;
	SET @LCE_CPF=LCECPF;
	SET @LCE_MATERIALCOST=LCEMATERIALCOST;
	SET @LCE_WIRINGCOST=LCEWIRINGCOST;
	SET @LCE_LABOURCOST=LCELABOUR_COST;
	SET @LCE_REMARKS=LCEREMARKS;


	MAIN_LOOP : LOOP
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@LCE_IPDID,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO IPDID;
		SELECT @REMAINING_STRING INTO @LCE_IPDID;
		IF IPDID='' THEN
			SET IPDID=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_DESCRIPTION,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO DESCRIPTION;
		SELECT @REMAINING_STRING INTO @LCE_DESCRIPTION;

		IF DESCRIPTION='' THEN
			SET DESCRIPTION=NULL;
		END IF;
		
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_QUANTITY,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO QUANTITY;
		SELECT @REMAINING_STRING INTO @LCE_QUANTITY;

		IF QUANTITY='' THEN
			SET QUANTITY=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_UNITRATE,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO UNITRATE;
		SELECT @REMAINING_STRING INTO @LCE_UNITRATE;

		IF UNITRATE='' THEN
			SET UNITRATE=NULL;
		END IF;
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_CPF,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO CPF;
		SELECT @REMAINING_STRING INTO @LCE_CPF;

		IF CPF='' THEN
			SET CPF=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_MATERIALCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO MATER_COST;
		SELECT @REMAINING_STRING INTO @LCE_MATERIALCOST;

		IF MATER_COST='' THEN
			SET MATER_COST=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_WIRINGCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO WIRINGCOST;
		SELECT @REMAINING_STRING INTO @LCE_WIRINGCOST;

		IF WIRINGCOST='' THEN
			SET WIRINGCOST=NULL;
		END IF;
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_LABOURCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO LABOUR_COST;
		SELECT @REMAINING_STRING INTO @LCE_LABOURCOST;

		IF LABOUR_COST='' THEN
			SET LABOUR_COST=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_REMARKS,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO REMARKS;
		SELECT @REMAINING_STRING INTO @LCE_REMARKS;

		IF REMARKS='' THEN
			SET REMARKS=NULL;
		END IF;

		IF CABLING_SUBDATA=' ' THEN
			SET CABLING_SUBDATA=NULL;
		END IF;

		IF CABLING_SUBDATA IS NOT NULL THEN
		SET CTID=(SELECT CT_ID FROM LCE_CABLING_TYPE WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=CABLINGTYPE) AND CT_DATA=CABLINGDATA AND CT_SUBDATA=CABLING_SUBDATA);
		ELSE
		SET CTID=(SELECT CT_ID FROM LCE_CABLING_TYPE WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=CABLINGTYPE) AND CT_DATA=CABLINGDATA);
		END IF;
		SET ARID=(SELECT AR_ID FROM LCE_AMPERE_RATING WHERE AR_DATA=AMPEREDATA);
		SET DESC_ID=(SELECT ID_ID FROM LCE_ITEM_DESCRIPTION WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=IDTYPE AND TSI_FLAG='XX' AND TI_ID=(SELECT TI_ID FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID)) AND ID_DATA=IDDATA);
		SET PFID=(SELECT PF_ID FROM LCE_POWER_FACTOR WHERE PF_DATA=PFDATA);
		SET IBID=(SELECT IB_ID FROM LCE_ITEM_BRAND WHERE IB_DATA=IBDATA);
		SET FROMLOCID=(SELECT PL_ID FROM LCE_PROJECT_LOCATION WHERE PL_LOCATION=FROMLOCATION);
		SET TOLOCID=(SELECT PL_ID FROM LCE_PROJECT_LOCATION WHERE PL_LOCATION=TOLOCATION);
		SET TSIID=(SELECT TSI_ID FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID);
		SET MARKDOWN=(SELECT TMD_MARK_DOWN FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID);
		SET CHECK_DESC=(SELECT IPD_DESCRIPTION FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID);
		-- Preliminaries & General
		IF TIID=1 THEN
			IF IPDID IS NOT NULL AND  QUANTITY IS NOT NULL AND DESCRIPTION IS NOT NULL AND UNITRATE IS NOT NULL AND CPF IS NOT NULL THEN
				SET MATER_COST=(UNITRATE+CPF);
				SET MATERIAL_COST=((QUANTITY*UNITRATE)+CPF);
				SET BASEPRICE=MATERIAL_COST;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_UNIT_RATE=UNITRATE,TMD_CPF=CPF,TMD_MATERIAL_COST=MATER_COST,TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
				ELSE
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_UNIT_RATE,TMD_CPF,TMD_MATERIAL_COST,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,UNITRATE,CPF,MATER_COST,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;

				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;

		END IF;
		--  HT Switchgear & Accessories
		IF TIID=2  AND TSIID=5 THEN
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL THEN
				SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
				SET BASEPRICE=(MATERIAL_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00)+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
			
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;

		IF TIID=2  AND TSIID=6 THEN
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
				
		
		END IF;

		--  Power Transformer
		IF TIID=3 AND TSIID=9  THEN
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
				SET SUCCESS_MESSAGE=1;
				END IF;
			
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;

				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;

		END IF;

		IF TIID=3 AND TSIID=10 THEN
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
				SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
		END IF;

		--  HV Cabling, Pilot Cable & Control Cable, MSB/EMSB, SSB, DBs & Tap Off Box
		IF (TIID=4) OR (TIID=5)  THEN
				IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
						
					END IF;
				ELSE 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
		END IF;


		IF (TIID=6) AND (TSIID=22)  THEN
				IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
		END IF;

		IF (TIID=6) AND (TSIID=23)  THEN
			IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
				ELSE 
			 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Generator System
		IF (TIID=7) AND (TSIID=27)  THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND (LABOUR_COST IS NOT NULL)) THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		IF (TIID=7) AND ((TSIID=28) OR (TSIID=29) OR (TSIID=30)  OR  (TSIID=31)  OR  (TSIID=32)) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
	
		END IF;

		--  Busbar System
		IF (TIID=8) THEN 
				IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  (QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL THEN
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
			
		END IF;

		--  Sensing Cabling
		IF (TIID=9) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		--  Sub-mains/ Main Distribution System
		IF (TIID=10) THEN 
				IF IPDID IS NOT NULL  AND QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					SET DESCRIPTION=(SELECT IPD_DESCRIPTION FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID);
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
						TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
	
		END IF;

		--  Final Circuit Wiring for Lightings,Final Circuit Wiring for Power,Final Circuit Wiring for Isolators 
		IF (TIID=11) OR (TIID=12) OR (TIID=13) THEN 
			IF IPDID IS NOT NULL  AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL  AND WIRINGCOST IS NOT NULL THEN
				SET BASE_WIRING_COST=(QUANTITY*WIRINGCOST);
				SET BASEPRICE=BASE_WIRING_COST;
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_WIRING_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,WIRINGCOST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_WIRING_COST=WIRINGCOST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		END IF;

		-- Electrical Accessories ( Switches, SSO & Isolator)
		IF (TIID=14) THEN 
				IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,IB_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,IBID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
						SET SUCCESS_MESSAGE=1;
					END IF;
				
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,IB_ID=IBID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
	
		END IF;

		-- Earthing System
		IF (TIID=15) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=MATERIAL_COST;
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Lightning Protection System
		IF (TIID=16) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL  THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Lightning Warning System
		IF (TIID=17) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL)  OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN
				SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP)  WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;
		-- Underground Piping System
		IF (TIID=18) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=MATERIAL_COST;
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;
		-- Telephone Distribution System, Structured Cabling (Data) System
		IF (TIID=19) OR (TIID=20) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP)WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		--  Cable Support System
		IF (TIID=21) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN 
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF  EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP)
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;

		-- Card Access System
		IF (TIID=22) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- CCTV System
		IF (TIID=23) THEN 
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) THEN 
				SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
				SET BASEPRICE=(MATERIAL_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP) WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		END IF;
		-- Car Barrier System,Public Address System, Building Intercom System,Emergency Call Bell System,Fireman Intercom System,MATV/SCV System
		IF (TIID=24) OR (TIID=25) OR (TIID=26) OR (TIID=27) OR (TIID=28) OR (TIID=29)THEN 
			IF IPDID IS NOT NULL  AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,
					TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP)
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		IF (TIID=30) THEN 
			IF IPDID IS NOT NULL AND   UNITRATE IS NOT NULL THEN 
				SET MATERIAL_COST=UNITRATE;
				SET BASEPRICE=MATERIAL_COST;
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_UNIT_RATE ,TMD_MATERIAL_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,UNITRATE,MATERIAL_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_UNIT_RATE=UNITRATE ,TMD_MATERIAL_COST=MATERIAL_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP)
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
					IF DESCRIPTION IS NULL AND UNITRATE IS NOT NULL THEN
						SET TMDID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID=IPDID);
						DELETE FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID=TMDID;
						DELETE FROM LCE_TENDER_SUMMARY_DETAILS WHERE TMD_ID=TMDID;
					END IF;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;
		IF DESCRIPTION IS NOT NULL THEN
			IF TRIM(DESCRIPTION)!=TRIM(CHECK_DESC) THEN
				SET TMDID=(SELECT TMD_ID FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID));
				IF TMDID IS NOT NULL THEN
					UPDATE LCE_MANUAL_KEY_IN_DETAILS SET MKID_DESCRIPTION=DESCRIPTION WHERE TMD_ID=TMDID;
					SET SUCCESS_MESSAGE=1;

				ELSE
					SET TMDID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID);
					INSERT INTO LCE_MANUAL_KEY_IN_DETAILS(TMD_ID,MKID_DESCRIPTION,ULD_ID)VALUES
					(TMDID,DESCRIPTION,(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP));
					SET SUCCESS_MESSAGE=1;

				END IF;
			END IF;
		END IF;
		

		IF @LCE_IPDID IS NULL THEN
			LEAVE  MAIN_LOOP;
		END IF;
	END LOOP;
	SET MARKDOWN=(SELECT DISTINCT(TMD_MARK_DOWN) FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TMD_MARK_DOWN IS NOT NULL);
	IF MARKDOWN IS NOT NULL THEN
		CALL SP_TENDER_SUMMARY_UPDATE(TMID,MARKDOWN,USERSTAMP,@SUCCESS_MESSAGE);
	END IF;
	SET PTID=(SELECT PT_ID FROM LCE_TENDER_MANAGEMENT WHERE TM_ID=TMID);
	IF LCEIPDID='' THEN
		SET  LCEIPDID=0;
	END IF;
	SET @SET_LCE_TMDID=(SELECT CONCAT('SELECT DISTINCT GROUP_CONCAT(TMD.TMD_ID) INTO @LCETMDID FROM LCE_TENDER_SUMMARY_DETAILS TMD,LCE_ITEM_PRICE_DETAILS IPD WHERE TMD.IPD_ID=IPD.IPD_ID AND PT_ID=',PTID,' AND TMD.TM_ID=',TMID,' AND TI_ID=',TIID,' AND IPD.IPD_ID NOT IN (',LCEIPDID,')'));
	PREPARE SET_LCE_TMDID_STMT FROM @SET_LCE_TMDID;
	EXECUTE SET_LCE_TMDID_STMT;
	SET LCE_TMDID=@LCETMDID;
	IF LCE_TMDID IS NOT NULL THEN
		SET @DELETEQUERY=(SELECT CONCAT('DELETE FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID IN (',LCE_TMDID,')'));
		PREPARE DELETEQUERY_STMT FROM @DELETEQUERY;
		EXECUTE DELETEQUERY_STMT;
		SET @SETDELETEQUERY=(SELECT CONCAT('DELETE FROM LCE_TENDER_SUMMARY_DETAILS WHERE TMD_ID IN (',LCE_TMDID,')'));
		PREPARE SETDELETEQUERY_STMT FROM @SETDELETEQUERY;
		EXECUTE SETDELETEQUERY_STMT;
		SET SUCCESS_MESSAGE=1;
	END IF;

END IF;
COMMIT;
END;

/*

-- 1 Preliminaries & General
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1^~2^~3','Project Manager^~Project Engineer^~Safety Engineer','3^~4^~5','300^~200^~500','400^~500^~600',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

--  2 HT Switchgear & Accessories
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'64^~65^~66','Incoming Feeder Panel^~Transformer Feeder Panel^~Outgoing Feeder Panel','3^~4^~5',NULL,NULL,'900^~1200^~1300','800^~700^~600','980^~567^~457','Type of HT Switchgrear','GIS',null,'630A/ 22 KV',NULL,NULL,NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

--  3 Power Transformer
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'136^~137^~138^~142','1 MVA^~1.5 MVA^~1.6 MVA^~6789','3^~4^~5^~6',NULL,NULL,'900^~1200^~1300^~780',NULL,'980^~567^~457^~790','Transformer Type','Silicone Oil',null,'6.6 KV/ 433 KV',NULL,NULL,NULL,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 4 HV Cabling, Pilot Cable & Control Cable
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'172^~173^~174^~175','3C 185 mmsq 6.6 KV XLPE/SWA/PVC^~3C 300 mmsq 6.6 KV XLPE/SWA/PVC^~3C 185 mmsq 22KV XLPE/PVC/DSTA^~3C 300 mmsq 22KV XLPE/PVC/DSTA','3^~4^~5^~6',NULL,NULL,'900^~1200^~1300^~780',NULL,'980^~567^~457^~790','HT Cable type','6.6 KV',null,NULL,NULL,NULL,NULL,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE


-- 5. MSB/EMSB
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'268^~269^~270^~271','3C 185 mmsq 6.6 KV XLPE/SWA/PVC^~3C 300 mmsq 6.6 KV XLPE/SWA/PVC^~3C 185 mmsq 22KV XLPE/PVC/DSTA^~3C 300 mmsq 22KV XLPE/PVC/DSTA','3^~4^~5^~6',NULL,NULL,'900^~1200^~1300^~780',NULL,'980^~567^~457^~790','HT Cable type','6.6 KV',null,NULL,NULL,NULL,NULL,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 6 SSB, DBs & Tap Off Box
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'283^~284^~285^~286','abc^~abc^~abc^~3C 300 mmsq 22KV XLPE/PVC/DSTA','3^~4^~5^~6',NULL,NULL,'900^~1200^~1300^~780',NULL,'980^~567^~457^~790','MSB/EMSB Type','6.6 KV',null,NULL,NULL,NULL,NULL,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 7 GENERATOR
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'328^~329^~330^~331','80 KVA Genset c/w Fuel Tank^~100 KVA Genset c/w Fuel Tank^~150 KVA Genset c/w Fuel Tank^~200 KVA Genset c/w Fuel Tank','3^~4^~5^~6',NULL,NULL,'900^~1200^~1300^~780',NULL,'980^~567^~457^~790','Generator type','Indoor','75 dBA',NULL,NULL,NULL,'0.8',NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE


-- 8 Busbar System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'415^~416^~417^~418','150A TPN Busbar System^~200A TPN Busbar System^~400A TPN Busbar System,^~400A TPN Busbar System','3^~4^~5^~6',NULL,NULL,'300^~700^~600^~980',NULL,'700^~600^~500^~400','Busbar type','copper',null,NULL,NULL,NULL,null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

--11 Final Circuit Wiring for Lightings
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1249^~1250^~1251^~1252','Lighting point in 3 x 1.5 mmsq PVC within 5 Meter^~Lighting point in 3 x 1.5 mmsq PVC within 10 Meter^~Lighting point in 3 x 1.5 mmsq PVC within 15 Meter^~Lighting point in 3 x 1.5 mmsq PVC within 20 Meter','3^~4^~5^~6',NULL,NULL,NULL,'800^~900^~500^~300',NULL,null,null,null,NULL,NULL,NULL,null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 12 Final Circuit Wiring for Power
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1363^~1364^~1365^~1366','Power point in 3 x 1.5 mmsq PVC within 5 Meter^~Power point in 3 x 1.5 mmsq PVC within 10 Meter^~Power point in 3 x 1.5 mmsq PVC within 15 Meter^~Power point in 3 x 1.5 mmsq PVC within 20 Meter','3^~4^~5^~6',NULL,NULL,NULL,'780^~880^~980^~6700',NULL,null,null,null,NULL,NULL,NULL,null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 13 Final Circuit Wiring for Isolators ( 60A TPN and below)
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1423^~1424^~1425^~1426','20A DP Isolator point 3 x 4 mmsq PVC ^~30A DP Isolator point 3 x 10 mmsq PVC ^~40A DP Isolator point 3 x 16 mmsq PVC ^~60A DP Isolator point 2 x 25 mmsq PVC +16 mmsq Ecc','3^~4^~5^~6',NULL,NULL,NULL,'900^~800^~600^~5200',NULL,null,null,null,NULL,NULL,NULL,null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- 14 Electrical Accessories ( Switches, SSO & Isolator)
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1471^~1472^~1473^~1474','1 Gang 1 Way Switch^~2 Gang 1 Way Switch^~3 Gang 1 Way Switch^~4 Gang 1 Way Switch','3^~4^~5^~6',NULL,NULL,'780^~980^~480^~680',NULL,'880^~680^~380^~280',null,null,null,NULL,'Description','Concealed',null,'MK- Slimline','Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE


-- Earthing System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1666^~1667^~1668^~1669',"Earth Point c/w Earth Chamber c.w Accessories^~New Earth 12 way Earth Bar.^~95 mm sq ECC From E.B to MSB^~95 mmsq ECC to X'mer Star Point",'3^~4^~5^~6',NULL,NULL,'780^~980^~480^~680',NULL,NULL,null,null,null,NULL,'Description','HT Switchroom',null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Lightning Protection System

CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1738^~1739^~1740^~1741',"25mm X 3mm Cu Tape - Horizontal Conductor^~CU Tape Square Clamp^~25mm x 3mm Cu Tape - Down Conductor^~Air Termination",'3^~4^~5^~6',NULL,NULL,'790^~960^~450^~620',NULL,'800^~610^~390^~250',null,null,null,NULL,'Description','Guard house',null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Lightning Warning System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1789^~1790^~1791^~1792',"Main Equipment^~Mater SMS Module c/w Siren & Becon^~Slave SMS Module c.w Sien & Becon^~Testing & Commisisoning",'3^~4^~5^~6',NULL,NULL,'550^~780^~530^~900','800^~610^~390^~250','790^~960^~450^~620',NULL,null,null,NULL,'Description','Building',null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Underground Piping System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1804^~1805^~1806^~1807',"150 mm uPVC Pipe^~110 mm uPVC Pipe^~50 mm uPVC Pipe^~32 mm uPVC Pipe",'3^~4^~5^~6',NULL,NULL,'550^~780^~530^~900',NULL,NULL,'TYPE','In Ground',null,NULL,'Description','For Data',null,NULL,'Basement 3','Basement 2',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Telephone Distribution System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'1903^~1904^~1905^~1906',"Supply & Install 20 Pair DP/BT in the Units^~4 Nos of 5Pair Cat6 Cabling from Riser to Apartment Units c/w Conduits^~Telephone Distribution Points (RJ 45)^~Conduit for the Telephone Points",'3^~4^~5^~6',NULL,NULL,'550^~780^~530^~900','550^~780^~530^~900','550^~780^~530^~900',NULL,NULL,null,NULL,'Description','Telephone Cables',null,NULL,'3rd Storey','4th Storey',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Structured Cabling (Data) System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2020^~2021^~2022^~2023',"2 Core Fiber Optic Cabling from riser to units^~Termination of Fiber Optic cable^~2 Nos.of 25 mm empty conduits from riser to units^~Supply & install FO Termination box in A-units",'3^~4^~5^~6',NULL,NULL,'550^~780^~530^~900','550^~780^~530^~900','550^~780^~530^~900',NULL,NULL,null,NULL,'Description','Based on Fibre Optic',null,NULL,'3rd Storey','4th Storey',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Cable Support System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2155^~2156^~2157','50 X 25 mm Trunking^~50 X 50 mm Trunking^~75 X 50 mm Trunking','3^~4^~5',NULL,NULL,'900^~1200^~1300',NULL,'980^~567^~457',NULL,NULL,null,NULL,'Description','ELECTRO GALVANISED',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

--  Card Access System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2401^~2402^~2403','Security Workstation c/w at Management Office^~- Report printer^~- Workstation with 19" Monitor','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','980^~567^~457',NULL,NULL,null,NULL,'Description','Cabling work',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- CCTV System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2557^~2558^~2559','Basic Control Keyboard^~-16 Channel DVR^~-Hard Disck','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457',NULL,NULL,NULL,null,NULL,'Description','Cable support system',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE


-- Car Barrier System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2692^~2693^~2694','EPS Antenna w/ Controller^~-Software Management ** Loaded into PC, sharing with Card Access System^~-Came Carpark Barrier with 4m Boom','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','Equipment',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Public Address System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2800^~2801^~2802','TOA: System Manager^~-TOA: Surveillance Frame^~-TOA: Remote Microphone Console c/w Extension Unit and Mic. Input Module * Located at FCC, Reception Counter & Main Lobby','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','Localised Paging System (If Required):',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Building Intercom System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2911^~2912^~2913','Emergency intercom stainless steel VCP^~-33VDC Power supply unit^~-Easycom audio handfree VIP','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','Cable support system',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Emergency Call Bell System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2938^~2939^~2940','Stainless Steel Panic button With Emergency Call Wording and "Ambernull Indication light^~-Blue Strobelight With Siren^~-Pull Cord','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','For HDC Toilets:(Pull Cord):(If Required):',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Fireman Intercom System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'2980^~2981^~2982','8-module master console panel c/w inter module assembly work,etc.. -for max 50 zones^~-Battery charger module c/w 7AH lead acid battery^~-Common truuble indicator module','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','Cable support system',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- MATV/SCV System
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'3010^~3011^~3012','2.4M Satellite dish w/ hot-dip galvanised ground mount bracket^~-Anti-radar, line-amp, feedhorn & LNB^~-Satellite receiver','3^~4^~5',NULL,NULL,'900^~1200^~1300','980^~567^~457','900^~1200^~1300',NULL,NULL,null,NULL,'Description','Cable Readiness Distribution',NULL,NULL,'1st Storey','Basement 3',NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE

-- Testing & Commissioning
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'3148^~3149^~3150','With EMA^~-With PowerGrid^~-With SP Services',NULL,'700^~800^~400',NULL,NULL,NULL,NULL,NULL,NULL,null,NULL,'Description','Attendance Cost',NULL,NULL,NULL,NULL,NULL,NULL,'admin',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE










