--VERSION:0.1 --DATE:04/0/2015 --DESC:CREATE SP TO SHOWING EXISTING RECORDS IN UPDATE FORM --DONE BY:RL
DROP PROCEDURE IF EXISTS SP_LCE_VW_TENDER_ITEM_DTLS;
CREATE PROCEDURE SP_LCE_VW_TENDER_ITEM_DTLS(
IN TENDER_ITEM_ID INTEGER,
IN PRICE_ID INTEGER,
IN USERSTAMP VARCHAR(50),
OUT TEMP_VW_TENDER_SUMMARYDTLS TEXT)

BEGIN

	DECLARE USERSTAMP_ID INTEGER;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);

	DECLARE TEMP_LCE_TENDER_SUMMARYDTLS TEXT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		IF(TEMP_LCE_TENDER_SUMMARYDTLS IS NOT NULL) THEN
			SET @DROP_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LCE_TENDER_SUMMARYDTLS,''));
			PREPARE DROP_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @DROP_TEMP_LCE_TENDER_SUMMARYDTLS;
			EXECUTE DROP_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;
		END IF;
	END;
	
	START TRANSACTION;

-- SUB SP FOR CONVERTING USERSTAMP INTO ULDID
	CALL SP_LCE_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@USER_ID);
	SET USERSTAMP_ID=@USER_ID;

	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));

	SET TEMP_LCE_TENDER_SUMMARYDTLS=(SELECT CONCAT('TEMP_LCE_TENDER_SUMMARYDTLS','_',SYSDATEANDULDID));

	SET @CREATE_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('CREATE TABLE ',TEMP_LCE_TENDER_SUMMARYDTLS,' (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	IPD_ID INTEGER,
	TI_ID INTEGER,
	TI_ITEMS VARCHAR(300),
	TSI_ID INTEGER,
	TSI_SNO	VARCHAR(10),
	SUBITEM_SNO VARCHAR(10),
	TSI_ITEMS VARCHAR(300),
	TMD_ID INTEGER,
	TMD_SNO	VARCHAR(10),
	IPD_CODENO VARCHAR(10),
	TMD_DESCRIPTION	TEXT,
	TMD_QUANTITY INTEGER,
	TMD_UNIT_RATE DECIMAL(7,2),
	TMD_CPF	DECIMAL(7,2),
	TMD_MATERIAL_COST DECIMAL(7,2),
	TMD_WIRING_COST	DECIMAL(7,2),
	TMD_LABOUR_COST	DECIMAL(7,2),
	TSI_DESCRIPTION_TYPE VARCHAR(100),
	PT_ID INTEGER,
	PRIMARY KEY(ID))'));
	PREPARE CREATE_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @CREATE_TEMP_LCE_TENDER_SUMMARYDTLS;
	EXECUTE CREATE_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;

-- QUERY FOR INSERT VALUES IN TEMP_LCE_TENDER_SUMMARYDTLS TABLE
	SET @INSERT_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('INSERT INTO ',TEMP_LCE_TENDER_SUMMARYDTLS,'
	(IPD_ID,TI_ID,TI_ITEMS,TSI_ID,TSI_SNO,SUBITEM_SNO,TSI_ITEMS,TMD_ID,TMD_SNO,IPD_CODENO,TMD_DESCRIPTION,
	TMD_QUANTITY,TMD_UNIT_RATE,TMD_CPF,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,TSI_DESCRIPTION_TYPE) 
	SELECT TMD.IPD_ID,IPD.TI_ID,TI.TI_ITEMS,IPD.TSI_ID,TSI.TSI_SNO,TSI.TSI_SNO,TSI.TSI_ITEMS,TMD.TMD_ID,
	TMD.TMD_SNO,IPD.IPD_CODENO,TMD.TMD_DESCRIPTION,TMD.TMD_QUANTITY,TMD.TMD_UNIT_RATE,TMD.TMD_CPF,TMD.TMD_MATERIAL_COST,
	TMD.TMD_WIRING_COST,TMD.TMD_LABOUR_COST,TSI.TSI_DESCRIPTION_TYPE FROM LCE_TENDER_SUMMARY_DETAILS TMD,LCE_ITEM_PRICE_DETAILS IPD,
	LCE_TENDER_ITEMS TI,LCE_TENDER_SUB_ITEMS TSI WHERE IPD.TI_ID=',TENDER_ITEM_ID,' AND IPD.PT_ID=',PRICE_ID,' AND
	TMD.IPD_ID=IPD.IPD_ID AND IPD.TI_ID=TI.TI_ID AND IPD.TSI_ID=TSI.TSI_ID ORDER BY TI.TI_ID,TI.TI_ITEMS,TMD.TMD_SNO ASC'));
	PREPARE INSERT_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @INSERT_TEMP_LCE_TENDER_SUMMARYDTLS;
	EXECUTE INSERT_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;

	SET @INSERT_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('INSERT INTO ',TEMP_LCE_TENDER_SUMMARYDTLS,'
	(IPD_ID,TI_ID,TI_ITEMS,TSI_ID,TSI_SNO,SUBITEM_SNO,TSI_ITEMS,TMD_ID,TMD_SNO,IPD_CODENO,TMD_DESCRIPTION,
	TMD_UNIT_RATE,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,TSI_DESCRIPTION_TYPE) 
	SELECT DISTINCT T.IPD_ID,T.TI_ID,TI_ITEMS,TSI.TSI_ID,TSI_SNO,TSI_SNO,TSI_ITEMS,TMD_ID,T.IPD_SNO,IPD_CODENO,
	T.IPD_DESCRIPTION,T.IPD_UNIT_RATE,T.IPD_MATERIAL_COST,T.IPD_WIRING_COST,T.IPD_LABOUR_COST,TSI.TSI_DESCRIPTION_TYPE FROM 
	LCE_ITEM_PRICE_DETAILS T LEFT JOIN LCE_TENDER_SUMMARY_DETAILS TMD ON T.IPD_ID=TMD.IPD_ID,LCE_TENDER_SUB_ITEMS TSI,LCE_TENDER_ITEMS TI WHERE NOT EXISTS 
	(SELECT  IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS T1 WHERE T1.IPD_ID=T.IPD_ID)AND T.PT_ID=',PRICE_ID,' AND TSI.TSI_ID=T.TSI_ID AND 
	T.TI_ID=TI.TI_ID AND T.TI_ID=',TENDER_ITEM_ID,' GROUP BY T.IPD_ID'));
	PREPARE INSERT_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @INSERT_TEMP_LCE_TENDER_SUMMARYDTLS;
	EXECUTE INSERT_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;

	SET @UPDATE_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('UPDATE ',TEMP_LCE_TENDER_SUMMARYDTLS,'
	SET PT_ID=',PRICE_ID,''));
	PREPARE UPDATE_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @UPDATE_TEMP_LCE_TENDER_SUMMARYDTLS;
	EXECUTE UPDATE_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;

	SET TEMP_VW_TENDER_SUMMARYDTLS=(SELECT CONCAT('TEMP_VW_TENDER_SUMMARY_DETAILS','_',SYSDATEANDULDID));

	SET @CREATE_TEMP_VW_TENDER_SUMMARYDTLS = (SELECT CONCAT('CREATE TABLE ',TEMP_VW_TENDER_SUMMARYDTLS,'(
	IPD_ID INTEGER,
	TENDER_ITEMS VARCHAR(300),
	TSIID INTEGER,
	CODE_NO VARCHAR(10),
	SERIAL_NO VARCHAR(10), 
	DESCRIPTION TEXT,
	PT_ID INTEGER,
	MATERIAL_COST DECIMAL(7,2),
	WIRING_COST	DECIMAL(7,2),
	LABOUR_COST	DECIMAL(7,2),
	CPF	DECIMAL(7,2),
	UNIT_RATE DECIMAL(7,2),
	TSI_ID INTEGER,
	TSI_ITEMS VARCHAR(300),
	TSI_SNO	VARCHAR(10),
	TSI_DESCRIPTION_TYPE VARCHAR(100),
	QUANTITY INTEGER)'));
	PREPARE CREATE_TEMP_VW_TENDER_SUMMARYDTLS_STMT FROM @CREATE_TEMP_VW_TENDER_SUMMARYDTLS;
	EXECUTE CREATE_TEMP_VW_TENDER_SUMMARYDTLS_STMT;

	SET @INSERT_TEMP_VW_TENDER_SUMMARYDTLS = (SELECT CONCAT('INSERT INTO ',TEMP_VW_TENDER_SUMMARYDTLS,'
	(IPD_ID,TENDER_ITEMS,TSIID,CODE_NO,SERIAL_NO,DESCRIPTION,PT_ID,MATERIAL_COST,WIRING_COST,LABOUR_COST,
	CPF,UNIT_RATE,TSI_ID,TSI_ITEMS,TSI_SNO,TSI_DESCRIPTION_TYPE,QUANTITY) 
	SELECT IPD_ID,TI_ITEMS,TSI_ID,IPD_CODENO,TMD_SNO,TMD_DESCRIPTION,PT_ID,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,
	TMD_CPF,TMD_UNIT_RATE,TSI_ID,TSI_ITEMS,TSI_SNO,TSI_DESCRIPTION_TYPE,TMD_QUANTITY
	FROM ',TEMP_LCE_TENDER_SUMMARYDTLS,' ORDER BY IPD_ID ASC'));
	PREPARE INSERT_TEMP_VW_TENDER_SUMMARYDTLS_STMT FROM @INSERT_TEMP_VW_TENDER_SUMMARYDTLS;
	EXECUTE INSERT_TEMP_VW_TENDER_SUMMARYDTLS_STMT;	

	IF(TEMP_LCE_TENDER_SUMMARYDTLS IS NOT NULL) THEN
		SET @DROP_TEMP_LCE_TENDER_SUMMARYDTLS = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_LCE_TENDER_SUMMARYDTLS,''));
		PREPARE DROP_TEMP_LCE_TENDER_SUMMARYDTLS_STMT FROM @DROP_TEMP_LCE_TENDER_SUMMARYDTLS;
		EXECUTE DROP_TEMP_LCE_TENDER_SUMMARYDTLS_STMT;
	END IF;

	COMMIT;

END;