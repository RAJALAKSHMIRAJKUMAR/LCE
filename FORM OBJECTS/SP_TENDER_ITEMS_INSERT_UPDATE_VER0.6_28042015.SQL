-- VER0.5 DATE:27/04/2015 DESC:DID VALIDATION IF MATERAIL OR WIRING COST ANY ONE CAME MEANS NEED TO INSERT IN DB DONE BY:DHIVYA

-- VER0.4 DATE:21/04/2015 DESC: ADDED REMARKS AND FORM ID INPUT DONE BY:DHIVYA
-- VER0.3 DATE:17/04/2015 DESC:SP FOR TENDER INSERT & UPDATE(ADDED DELETE PART AND IMPLEMENTED ROLLBACK) DONE BY:DHIVYA

DROP PROCEDURE IF EXISTS SP_TENDER_ITEMS_INSERT_UPDATE;
CREATE PROCEDURE SP_TENDER_ITEMS_INSERT_UPDATE(
SEARCH_OPTION INTEGER,
TMID INTEGER,
LCEIPDID TEXT,
LCEDESCRIPTION LONGTEXT,
LCEQUANTITY TEXT,
LCEUNITRATE TEXT,
LCECPF TEXT,
LCEMATERIALCOST TEXT,
LCEWIRINGCOST TEXT,
LCELABOUR_COST TEXT,
CABLINGTYPE TEXT,
CABLINGDATA VARCHAR(50),
CABLING_SUBDATA VARCHAR(50),
AMPEREDATA VARCHAR(50),
IDTYPE VARCHAR(50),
IDDATA VARCHAR(50),
PFDATA VARCHAR(50),
IBDATA VARCHAR(50),
FROMLOCATION VARCHAR(50),
TOLOCATION VARCHAR(50),
CODENO TEXT,
LCEREMARKS TEXT,
TIID INTEGER,
LCETSIID TEXT,
LCESNO TEXT,
USERSTAMP VARCHAR(40),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
DECLARE MATER_COST  DECIMAL(15,2);
DECLARE BASEPRICE DECIMAL(15,2);
DECLARE IPDID INTEGER;
DECLARE DESCRIPTION TEXT;
DECLARE QUANTITY INTEGER;
DECLARE UNITRATE DECIMAL(7,2);
DECLARE CPF DECIMAL(7,2);
DECLARE WIRINGCOST DECIMAL(15,2);
DECLARE LABOUR_COST DECIMAL(15,2);
DECLARE CTID INTEGER;
DECLARE ARID INTEGER;
DECLARE DESC_ID INTEGER;
DECLARE PFID INTEGER;
DECLARE IBID INTEGER;
DECLARE FROMLOCID INTEGER;
DECLARE TOLOCID INTEGER;
DECLARE MATERIAL_COST DECIMAL(15,2);
DECLARE BASE_WIRING_COST DECIMAL(15,2);
DECLARE MARKDOWN INTEGER;
DECLARE TSIID INTEGER;
DECLARE T_MATERIAL_COST DECIMAL(15,2);
DECLARE T_WIRING_COST DECIMAL(15,2);
DECLARE T_LABOUR_COST DECIMAL(15,2);
DECLARE CHECK_DESC TEXT;
DECLARE TMDID INTEGER;
DECLARE LCE_TMDID TEXT;
DECLARE PTID INTEGER;
DECLARE REMARKS TEXT;
DECLARE IN_TSIID INTEGER;
DECLARE IN_TIID INTEGER;
DECLARE ULDID INTEGER;
DECLARE SNO VARCHAR(10);
DECLARE IN_TMDID INTEGER;
DECLARE TIPDID INTEGER;
DECLARE LCETIPDID TEXT;
DECLARE DEL_TIPDID TEXT;
DECLARE CODE_NO VARCHAR(10);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
	ROLLBACK; 
		SET SUCCESS_MESSAGE=0;
	END;
	START TRANSACTION;
SET AUTOCOMMIT = 0;
SET ULDID=(SELECT ULD_ID FROM LCE_USER_MANAGEMENT WHERE ULD_USERNAME=USERSTAMP);
IF SEARCH_OPTION=1 OR SEARCH_OPTION=2 THEN
	SET SUCCESS_MESSAGE=0;

	SET @LCE_IPDID=LCEIPDID;
	SET @LCE_DESCRIPTION=LCEDESCRIPTION;
	SET @LCE_QUANTITY=LCEQUANTITY;
	SET @LCE_UNITRATE=LCEUNITRATE;
	SET @LCE_CPF=LCECPF;
	SET @LCE_MATERIALCOST=LCEMATERIALCOST;
	SET @LCE_WIRINGCOST=LCEWIRINGCOST;
	SET @LCE_LABOURCOST=LCELABOUR_COST;
	SET @LCE_REMARKS=LCEREMARKS;
	SET @LCE_TSIID=LCETSIID;
	SET @LCE_SNO=LCESNO;
	SET @LCE_CODENO=CODENO;
	SET LCETIPDID=0;


	MAIN_LOOP : LOOP
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@LCE_IPDID,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO IPDID;
		SELECT @REMAINING_STRING INTO @LCE_IPDID;
		IF IPDID=' ' THEN
			SET IPDID=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_DESCRIPTION,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO DESCRIPTION;
		SELECT @REMAINING_STRING INTO @LCE_DESCRIPTION;

		IF DESCRIPTION='' THEN
			SET DESCRIPTION=NULL;
		END IF;
		
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_QUANTITY,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO QUANTITY;
		SELECT @REMAINING_STRING INTO @LCE_QUANTITY;

		IF QUANTITY='' THEN
			SET QUANTITY=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_UNITRATE,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO UNITRATE;
		SELECT @REMAINING_STRING INTO @LCE_UNITRATE;

		IF UNITRATE='' THEN
			SET UNITRATE=NULL;
		END IF;
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_CPF,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO CPF;
		SELECT @REMAINING_STRING INTO @LCE_CPF;

		IF CPF='' THEN
			SET CPF=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_MATERIALCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO MATER_COST;
		SELECT @REMAINING_STRING INTO @LCE_MATERIALCOST;

		IF MATER_COST='' THEN
			SET MATER_COST=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_WIRINGCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO WIRINGCOST;
		SELECT @REMAINING_STRING INTO @LCE_WIRINGCOST;

		IF WIRINGCOST='' THEN
			SET WIRINGCOST=NULL;
		END IF;
		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_LABOURCOST,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO LABOUR_COST;
		SELECT @REMAINING_STRING INTO @LCE_LABOURCOST;

		IF LABOUR_COST='' THEN
			SET LABOUR_COST=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_REMARKS,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO REMARKS;
		SELECT @REMAINING_STRING INTO @LCE_REMARKS;

		IF REMARKS='' THEN
			SET REMARKS=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_TSIID,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO IN_TSIID;
		SELECT @REMAINING_STRING INTO @LCE_TSIID;

		IF IN_TSIID='' THEN
			SET IN_TSIID=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_SNO,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO SNO;
		SELECT @REMAINING_STRING INTO @LCE_SNO;

		IF SNO='' THEN
			SET SNO=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_TMDID,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO IN_TMDID;
		SELECT @REMAINING_STRING INTO @LCE_TMDID;

		IF IN_TMDID='' THEN
			SET IN_TMDID=NULL;
		END IF;

		CALL SP_LCE_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^~',@LCE_CODENO,@VALUE,@REMAINING_STRING);
		SELECT @VALUE INTO CODE_NO;
		SELECT @REMAINING_STRING INTO @LCE_CODENO;

		IF CODE_NO='' THEN
			SET CODE_NO=NULL;
		END IF;

		IF CABLING_SUBDATA=' ' THEN
			SET CABLING_SUBDATA=NULL;
		END IF;

		IF CABLING_SUBDATA IS NOT NULL THEN
		SET CTID=(SELECT CT_ID FROM LCE_CABLING_TYPE WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=CABLINGTYPE) AND CT_DATA=CABLINGDATA AND CT_SUBDATA=CABLING_SUBDATA);
		ELSE
		SET CTID=(SELECT CT_ID FROM LCE_CABLING_TYPE WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=CABLINGTYPE) AND CT_DATA=CABLINGDATA);
		END IF;
		SET ARID=(SELECT AR_ID FROM LCE_AMPERE_RATING WHERE AR_DATA=AMPEREDATA);
		SET DESC_ID=(SELECT ID_ID FROM LCE_ITEM_DESCRIPTION WHERE TSI_ID=(SELECT TSI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ITEMS=IDTYPE AND TSI_FLAG='XX' AND TI_ID=(SELECT TI_ID FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID)) AND ID_DATA=IDDATA);
		SET PFID=(SELECT PF_ID FROM LCE_POWER_FACTOR WHERE PF_DATA=PFDATA);
		SET IBID=(SELECT IB_ID FROM LCE_ITEM_BRAND WHERE IB_DATA=IBDATA);
		SET FROMLOCID=(SELECT PL_ID FROM LCE_PROJECT_LOCATION WHERE PL_LOCATION=FROMLOCATION);
		SET TOLOCID=(SELECT PL_ID FROM LCE_PROJECT_LOCATION WHERE PL_LOCATION=TOLOCATION);
		SET TSIID=IN_TSIID;
		SET MARKDOWN=(SELECT TMD_MARK_DOWN FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID);
		SET CHECK_DESC=(SELECT IPD_DESCRIPTION FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID);
		SET IN_TIID=(SELECT TI_ID FROM LCE_TENDER_SUB_ITEMS WHERE TSI_ID=IN_TSIID);

		IF IPDID IS NULL THEN
				SET TIPDID=(SELECT TIPD_ID FROM LCE_TENDER_ITEM_PRICE_DETAILS WHERE TM_ID=TMID AND TIPD_SNO=SNO);
				IF TIPDID IS NULL THEN
					INSERT INTO LCE_TENDER_ITEM_PRICE_DETAILS(TM_ID,TI_ID,TSI_ID,TIPD_CODENO,TIPD_SNO,TIPD_DESCRIPTION,ULD_ID) VALUES
					(TMID,IN_TIID,IN_TSIID,CODE_NO,SNO,DESCRIPTION,ULDID);
				SET TIPDID=(SELECT TIPD_ID FROM LCE_TENDER_ITEM_PRICE_DETAILS WHERE TM_ID=TMID AND TIPD_SNO=SNO);
				END IF;
				IF TIPDID IS NOT NULL THEN
					UPDATE LCE_TENDER_ITEM_PRICE_DETAILS SET TIPD_DESCRIPTION=DESCRIPTION,TIPD_CODENO=CODE_NO WHERE TIPD_ID=TIPDID;
				END IF;
				SET LCETIPDID=(SELECT CONCAT(LCETIPDID,',',TIPDID));
				SET @CHECKTIPDID=(SELECT CONCAT(0,TIPDID));
		END IF;
		

		-- Preliminaries & General
		IF TIID=1 THEN
			SET MATER_COST=(UNITRATE+CPF);
			SET MATERIAL_COST=((QUANTITY*UNITRATE)+CPF);
			SET BASEPRICE=MATERIAL_COST;
			
			IF IPDID IS NOT NULL AND  QUANTITY IS NOT NULL AND DESCRIPTION IS NOT NULL AND UNITRATE IS NOT NULL AND CPF IS NOT NULL THEN
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_UNIT_RATE,TMD_CPF,TMD_MATERIAL_COST,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,UNITRATE,CPF,MATER_COST,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_UNIT_RATE=UNITRATE,TMD_CPF=CPF,TMD_MATERIAL_COST=MATER_COST,TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND QUANTITY IS NOT NULL AND DESCRIPTION IS NOT NULL AND UNITRATE IS NOT NULL AND CPF IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_UNIT_RATE,TMD_CPF,TMD_MATERIAL_COST,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,UNITRATE,CPF,MATER_COST,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_UNIT_RATE=UNITRATE,TMD_CPF=CPF,TMD_MATERIAL_COST=MATER_COST,TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
		END IF;
		--  HT Switchgear & Accessories
	
		IF TIID=2  AND TSIID=5 THEN
			SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
			SET BASEPRICE=(MATERIAL_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00)+LABOUR_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;

			ELSEIF IPDID IS  NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;

		IF TIID=2  AND TSIID=6 THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND  SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;	
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
				
		
		END IF;

		--  Power Transformer
		IF TIID=3 AND TSIID=9  THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
			
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;

			ELSEIF IPDID IS NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				IF  NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN

					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
			
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;

		END IF;

		IF TIID=3 AND TSIID=10 THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
				SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,AR_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,CTID,ARID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
				SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,AR_ID=ARID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
		END IF;

		--  HV Cabling, Pilot Cable & Control Cable, MSB/EMSB, SSB, DBs & Tap Off Box
		IF (TIID=4) OR (TIID=5)  THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
						
					END IF;
				ELSEIF IPDID IS  NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
		END IF;

		IF (TIID=6) AND (TSIID=22)  THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);	
				IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL) THEN
					IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
		END IF;

		IF (TIID=6) AND (TSIID=23)  THEN
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST);
			IF IPDID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND DESCRIPTION IS NOT NULL AND  IN_TSIID IS NOT NULL AND QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
				ELSE 
			 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Generator System
		IF (TIID=7) AND (TSIID=27)  THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND (LABOUR_COST IS NOT NULL)) THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND (LABOUR_COST IS NOT NULL)) THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		IF (TIID=7) AND ((TSIID=28) OR (TSIID=29) OR (TSIID=30)  OR  (TSIID=31)  OR  (TSIID=32)) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,PF_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,CTID,PFID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,PF_ID=PFID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
	
		END IF;

		--  Busbar System
		IF (TIID=8) THEN 
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  (QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL THEN
					
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  (QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) AND LABOUR_COST IS NOT NULL THEN
					IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_BASE_PRICE=BASEPRICE,TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
			
		END IF;

		--  Sensing Cabling
		IF (TIID=9) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
			
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND  SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,CT_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,CTID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,CT_ID=CTID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		--  Sub-mains/ Main Distribution System
			IF (TIID=10) THEN 
					SET MATERIAL_COST=(QUANTITY*MATER_COST);
					SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
					SET DESCRIPTION=(SELECT IPD_DESCRIPTION FROM LCE_ITEM_PRICE_DETAILS WHERE IPD_ID=IPDID);
				IF IPDID IS NOT NULL  AND QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
						TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSEIF IPDID IS NULL  AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
					IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
						TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
	
			END IF;

		--  Final Circuit Wiring for Lightings,Final Circuit Wiring for Power,Final Circuit Wiring for Isolators 
		IF (TIID=11) OR (TIID=12) OR (TIID=13) THEN 
			SET BASE_WIRING_COST=(QUANTITY*WIRINGCOST);
			SET BASEPRICE=BASE_WIRING_COST;
			IF IPDID IS NOT NULL  AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL  AND WIRINGCOST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_WIRING_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,WIRINGCOST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_WIRING_COST=WIRINGCOST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS  NULL  AND  SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL  AND WIRINGCOST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_WIRING_COST,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,WIRINGCOST,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_WIRING_COST=WIRINGCOST,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		END IF;

		-- Electrical Accessories ( Switches, SSO & Isolator)
		IF (TIID=14) THEN 
				SET MATERIAL_COST=(QUANTITY*MATER_COST);
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
				IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,IB_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,IBID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
				
					IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,IB_ID=IBID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSEIF IPDID IS  NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
					IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,IB_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
						(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,IBID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
						SET SUCCESS_MESSAGE=1;
					END IF;
				
					IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
						UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,IB_ID=IBID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
						TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
						SET SUCCESS_MESSAGE=1;
					END IF;
				ELSE 
					 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
				END IF;
	
		END IF;

		-- Earthing System
		IF (TIID=15) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=MATERIAL_COST;
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Lightning Protection System
		IF (TIID=16) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL  THEN
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL  THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;

			ELSE 
				SET SUCCESS_MESSAGE=0;
				ROLLBACK;
				LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- Lightning Warning System
		IF (TIID=17) THEN 
			SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL)  OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID  WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL)  OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_BASE_PRICE=BASEPRICE,
					TMD_REMARKS=REMARKS,ULD_ID=ULDID  WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;

			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;
		-- Underground Piping System
		IF (TIID=18) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=MATERIAL_COST;
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,CTID,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL THEN
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,CT_ID,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,CTID,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,CT_ID=CTID,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;
		-- Telephone Distribution System, Structured Cabling (Data) System
		IF (TIID=19) OR (TIID=20) THEN 
			SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				SET MATERIAL_COST=(SELECT(IF(QUANTITY IS NOT NULL,QUANTITY,0)*IF(MATER_COST IS NOT NULL,MATER_COST,0.00)));
				SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		--  Cable Support System
		IF (TIID=21) THEN 
			SET MATERIAL_COST=(QUANTITY*MATER_COST);
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST);
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF  EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND  IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL AND LABOUR_COST IS NOT NULL THEN 
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF  EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;

		-- Card Access System
		IF (TIID=22) THEN 
			SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		-- CCTV System
		IF (TIID=23) THEN 
			SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
			SET BASEPRICE=(MATERIAL_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
			IF IPDID IS NOT NULL AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR  (WIRINGCOST IS NOT NULL)) THEN 
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,WIRINGCOST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,TMD_WIRING_COST=WIRINGCOST,ID_ID=DESC_ID,
					TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		END IF;
		-- Car Barrier System,Public Address System, Building Intercom System,Emergency Call Bell System,Fireman Intercom System,MATV/SCV System
		IF (TIID=24) OR (TIID=25) OR (TIID=26) OR (TIID=27) OR (TIID=28) OR (TIID=29)THEN 
			SET MATERIAL_COST=(IF(QUANTITY IS NOT NULL,QUANTITY,0)* IF(MATER_COST IS NOT NULL,MATER_COST,0.00));
			SET BASEPRICE=(MATERIAL_COST+LABOUR_COST+IF(WIRINGCOST IS NOT NULL,WIRINGCOST,0.00));
			IF IPDID IS NOT NULL  AND  DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,
					TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSEIF IPDID IS NULL AND SNO IS NOT NULL AND IN_TSIID IS NOT NULL AND DESCRIPTION IS NOT NULL AND  ((QUANTITY IS NOT NULL AND MATER_COST IS NOT NULL) OR (WIRINGCOST IS NOT NULL)) AND LABOUR_COST IS NOT NULL  THEN 
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_QUANTITY,TMD_MATERIAL_COST,TMD_WIRING_COST,TMD_LABOUR_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,QUANTITY,MATER_COST,WIRINGCOST,LABOUR_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_QUANTITY=QUANTITY,TMD_MATERIAL_COST=MATER_COST,
					TMD_WIRING_COST=WIRINGCOST,TMD_LABOUR_COST=LABOUR_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
		
		END IF;

		IF (TIID=30) THEN 
			SET MATERIAL_COST=UNITRATE;
			SET BASEPRICE=MATERIAL_COST;
			IF IPDID IS NOT NULL AND   UNITRATE IS NOT NULL THEN 
				IF NOT EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,IPD_ID,TMD_UNIT_RATE ,TMD_MATERIAL_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,IPDID,UNITRATE,MATERIAL_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT IPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,IPD_ID=IPDID,TMD_UNIT_RATE=UNITRATE ,TMD_MATERIAL_COST=MATERIAL_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND IPD_ID=IPDID;
					SET SUCCESS_MESSAGE=1;
					IF DESCRIPTION IS NULL AND UNITRATE IS NOT NULL THEN
						SET TMDID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE IPD_ID=IPDID);
						DELETE FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID=TMDID;
						DELETE FROM LCE_TENDER_SUMMARY_DETAILS WHERE TMD_ID=TMDID;
					END IF;
				END IF;
			ELSEIF IPDID IS NULL AND  SNO IS NOT NULL AND DESCRIPTION IS NOT NULL AND UNITRATE IS NOT NULL THEN 
				IF NOT EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					INSERT INTO LCE_TENDER_SUMMARY_DETAILS(TM_ID,TIPD_ID,TMD_UNIT_RATE ,TMD_MATERIAL_COST,ID_ID,TMD_FROM_LOCATION,TMD_TO_LOCATION,TMD_BASE_PRICE,TMD_REMARKS,ULD_ID)VALUES
					(TMID,TIPDID,UNITRATE,MATERIAL_COST,DESC_ID,FROMLOCID,TOLOCID,BASEPRICE,REMARKS,ULDID);
					SET SUCCESS_MESSAGE=1;
				END IF;
				IF EXISTS(SELECT TIPD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TIPD_ID=TIPDID) THEN
					UPDATE LCE_TENDER_SUMMARY_DETAILS SET TM_ID=TMID,TIPD_ID=TIPDID,TMD_UNIT_RATE=UNITRATE ,TMD_MATERIAL_COST=MATERIAL_COST,ID_ID=DESC_ID,TMD_FROM_LOCATION=FROMLOCID,TMD_TO_LOCATION=TOLOCID,
					TMD_REMARKS=REMARKS,TMD_BASE_PRICE=BASEPRICE,ULD_ID=ULDID
					WHERE TM_ID=TMID AND TIPD_ID=TIPDID;
					SET SUCCESS_MESSAGE=1;
				END IF;
			ELSE 
				 
					SET SUCCESS_MESSAGE=0;
					ROLLBACK;
					LEAVE  MAIN_LOOP;
			END IF;
			
		END IF;
		IF DESCRIPTION IS NOT NULL THEN
			IF TRIM(DESCRIPTION)!=TRIM(CHECK_DESC) THEN
				SET TMDID=(SELECT TMD_ID FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID));
				IF TMDID IS NOT NULL THEN
					UPDATE LCE_MANUAL_KEY_IN_DETAILS SET MKID_DESCRIPTION=DESCRIPTION WHERE TMD_ID=TMDID;
					SET SUCCESS_MESSAGE=1;

				ELSE
					SET TMDID=(SELECT TMD_ID FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND IPD_ID=IPDID);
					INSERT INTO LCE_MANUAL_KEY_IN_DETAILS(TMD_ID,MKID_DESCRIPTION,ULD_ID)VALUES
					(TMDID,DESCRIPTION,ULDID);
					SET SUCCESS_MESSAGE=1;

				END IF;
			END IF;
		END IF;
		IF @LCE_SNO IS NULL THEN
			LEAVE  MAIN_LOOP;
		END IF;
	END LOOP;
	SET MARKDOWN=(SELECT DISTINCT(TMD_MARK_DOWN) FROM LCE_TENDER_SUMMARY_DETAILS WHERE TM_ID=TMID AND TMD_MARK_DOWN IS NOT NULL);
	IF MARKDOWN IS NOT NULL THEN
		CALL SP_TENDER_SUMMARY_UPDATE(TMID,MARKDOWN,USERSTAMP,@SUCCESS_MESSAGE);
	END IF;
	SET PTID=(SELECT PT_ID FROM LCE_TENDER_MANAGEMENT WHERE TM_ID=TMID);
	IF LCEIPDID='' THEN
		SET  LCEIPDID=0;
	END IF;
	SET LCEIPDID=(SELECT REPLACE(LCEIPDID,' ',0));
	SET @SET_LCE_TMDID=(SELECT CONCAT('SELECT DISTINCT GROUP_CONCAT(TMD.TMD_ID) INTO @LCETMDID FROM LCE_TENDER_SUMMARY_DETAILS TMD,LCE_ITEM_PRICE_DETAILS IPD WHERE TMD.IPD_ID=IPD.IPD_ID AND PT_ID=',PTID,' AND TMD.TM_ID=',TMID,' AND TI_ID=',TIID,' AND IPD.IPD_ID NOT IN (',LCEIPDID,')'));
	PREPARE SET_LCE_TMDID_STMT FROM @SET_LCE_TMDID;
	EXECUTE SET_LCE_TMDID_STMT;
	SET LCE_TMDID=@LCETMDID;
	IF LCE_TMDID IS NOT NULL THEN
		SET @DELETEQUERY=(SELECT CONCAT('DELETE FROM LCE_MANUAL_KEY_IN_DETAILS WHERE TMD_ID IN (',LCE_TMDID,')'));
		PREPARE DELETEQUERY_STMT FROM @DELETEQUERY;
		EXECUTE DELETEQUERY_STMT;
		SET @SETDELETEQUERY=(SELECT CONCAT('DELETE FROM LCE_TENDER_SUMMARY_DETAILS WHERE TMD_ID IN (',LCE_TMDID,')'));
		PREPARE SETDELETEQUERY_STMT FROM @SETDELETEQUERY;
		EXECUTE SETDELETEQUERY_STMT;
		SET SUCCESS_MESSAGE=1;
	END IF;
	SET @SELECT_QUERY=(SELECT CONCAT('SELECT GROUP_CONCAT(TIPD_ID) INTO @D_TIPDID FROM LCE_TENDER_ITEM_PRICE_DETAILS WHERE  TIPD_ID NOT IN (',LCETIPDID,') AND TM_ID=',TMID,' AND TI_ID=',TIID));
	PREPARE SELECT_QUERY_STMT FROM @SELECT_QUERY;
	EXECUTE SELECT_QUERY_STMT;
	SET DEL_TIPDID=@D_TIPDID;
	SET @SET_TENDER_DELETEQUERY=(SELECT CONCAT('DELETE FROM LCE_TENDER_ITEM_PRICE_DETAILS WHERE TIPD_ID NOT IN (',LCETIPDID,') AND TM_ID=',TMID,' AND TI_ID=',TIID));
	PREPARE SET_TENDER_DELETEQUERY_STMT FROM @SET_TENDER_DELETEQUERY;
	EXECUTE SET_TENDER_DELETEQUERY_STMT;
	IF DEL_TIPDID IS NOT NULL THEN
	SET @SET_TENDER_DELETEQUERY=(SELECT CONCAT('DELETE  FROM LCE_TENDER_SUMMARY_DETAILS WHERE TIPD_ID IN (',DEL_TIPDID,')'));
	PREPARE SET_TENDER_DELETEQUERY_STMT FROM @SET_TENDER_DELETEQUERY;
	EXECUTE SET_TENDER_DELETEQUERY_STMT;
	END IF;
END IF;
COMMIT;
END;


/*
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'','TESTING SP','1','15','16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
1,1,'1.1.9','ADMIN',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE;

CALL SP_TENDER_ITEMS_INSERT_UPDATE(2,1,'','TESTING SP','2','34','35',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
1,1,'1.1.8','ADMIN',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE;

-- 30 TH FORM
CALL SP_TENDER_ITEMS_INSERT_UPDATE(1,1,'3142,3143,3144, ','With EMA^~With PowerGrid^~With SP Services^~TEST 30 TH FORM UPDATE',NULL,'8300.00^~8400.00^~8500.00^~9000.00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
30,'130^~130^~130^~130','30.1.1^~30.1.2^~30.1.3^~30.1.8','ADMIN',@SUCCESS_MESSAGE);
SELECT @SUCCESS_MESSAGE;
